{"version":3,"file":"index.cjs.development.js","sources":["../node_modules/react-hook-form/src/utils/isCheckBoxInput.ts","../node_modules/react-hook-form/src/utils/isDateObject.ts","../node_modules/react-hook-form/src/utils/isNullOrUndefined.ts","../node_modules/react-hook-form/src/utils/isObject.ts","../node_modules/react-hook-form/src/logic/getEventValue.ts","../node_modules/react-hook-form/src/logic/getNodeParentName.ts","../node_modules/react-hook-form/src/logic/isNameInFieldArray.ts","../node_modules/react-hook-form/src/utils/isPlainObject.ts","../node_modules/react-hook-form/src/utils/isWeb.ts","../node_modules/react-hook-form/src/utils/cloneObject.ts","../node_modules/react-hook-form/src/utils/compact.ts","../node_modules/react-hook-form/src/utils/isUndefined.ts","../node_modules/react-hook-form/src/utils/get.ts","../node_modules/react-hook-form/src/utils/isBoolean.ts","../node_modules/react-hook-form/src/utils/isKey.ts","../node_modules/react-hook-form/src/utils/stringToPath.ts","../node_modules/react-hook-form/src/utils/set.ts","../node_modules/react-hook-form/src/constants.ts","../node_modules/react-hook-form/src/useFormContext.tsx","../node_modules/react-hook-form/src/logic/getProxyFormState.ts","../node_modules/react-hook-form/src/useFormState.ts","../node_modules/react-hook-form/src/utils/isString.ts","../node_modules/react-hook-form/src/logic/generateWatchOutput.ts","../node_modules/react-hook-form/src/useWatch.ts","../node_modules/react-hook-form/src/logic/appendErrors.ts","../node_modules/react-hook-form/src/utils/convertToArrayPayload.ts","../node_modules/react-hook-form/src/utils/createSubject.ts","../node_modules/react-hook-form/src/utils/isPrimitive.ts","../node_modules/react-hook-form/src/utils/deepEqual.ts","../node_modules/react-hook-form/src/utils/isEmptyObject.ts","../node_modules/react-hook-form/src/utils/isFileInput.ts","../node_modules/react-hook-form/src/utils/isFunction.ts","../node_modules/react-hook-form/src/utils/isHTMLElement.ts","../node_modules/react-hook-form/src/utils/isMultipleSelect.ts","../node_modules/react-hook-form/src/utils/isRadioInput.ts","../node_modules/react-hook-form/src/utils/isRadioOrCheckbox.ts","../node_modules/react-hook-form/src/utils/live.ts","../node_modules/react-hook-form/src/utils/unset.ts","../node_modules/react-hook-form/src/utils/objectHasFunction.ts","../node_modules/react-hook-form/src/logic/getDirtyFields.ts","../node_modules/react-hook-form/src/logic/getCheckboxValue.ts","../node_modules/react-hook-form/src/logic/getFieldValueAs.ts","../node_modules/react-hook-form/src/logic/getRadioValue.ts","../node_modules/react-hook-form/src/logic/getFieldValue.ts","../node_modules/react-hook-form/src/logic/getResolverOptions.ts","../node_modules/react-hook-form/src/utils/isRegex.ts","../node_modules/react-hook-form/src/logic/getRuleValue.ts","../node_modules/react-hook-form/src/logic/getValidationModes.ts","../node_modules/react-hook-form/src/logic/hasPromiseValidation.ts","../node_modules/react-hook-form/src/logic/hasValidation.ts","../node_modules/react-hook-form/src/logic/isWatched.ts","../node_modules/react-hook-form/src/logic/iterateFieldsByAction.ts","../node_modules/react-hook-form/src/logic/schemaErrorLookup.ts","../node_modules/react-hook-form/src/logic/shouldRenderFormState.ts","../node_modules/react-hook-form/src/logic/shouldSubscribeByName.ts","../node_modules/react-hook-form/src/logic/skipValidation.ts","../node_modules/react-hook-form/src/logic/unsetEmptyArray.ts","../node_modules/react-hook-form/src/logic/updateFieldArrayRootError.ts","../node_modules/react-hook-form/src/utils/isMessage.ts","../node_modules/react-hook-form/src/logic/getValidateError.ts","../node_modules/react-hook-form/src/logic/getValueAndMessage.ts","../node_modules/react-hook-form/src/logic/validateField.ts","../node_modules/react-hook-form/src/logic/createFormControl.ts","../node_modules/react-hook-form/src/useForm.ts","../src/colors.ts","../src/styled.tsx","../src/header.tsx","../src/panelTable.tsx","../src/formStateTable.tsx","../src/settingAction.ts","../src/panel.tsx","../src/logo.tsx","../src/position.ts","../src/devToolUI.tsx","../src/extension/utils.ts","../src/extension/useExportControlToExtension.ts","../src/devTool.tsx"],"sourcesContent":["import { FieldElement } from '../types';\n\nexport default (element: FieldElement): element is HTMLInputElement =>\n  element.type === 'checkbox';\n","export default (value: unknown): value is Date => value instanceof Date;\n","export default (value: unknown): value is null | undefined => value == null;\n","import isDateObject from './isDateObject';\nimport isNullOrUndefined from './isNullOrUndefined';\n\nexport const isObjectType = (value: unknown): value is object =>\n  typeof value === 'object';\n\nexport default <T extends object>(value: unknown): value is T =>\n  !isNullOrUndefined(value) &&\n  !Array.isArray(value) &&\n  isObjectType(value) &&\n  !isDateObject(value);\n","import isCheckBoxInput from '../utils/isCheckBoxInput';\nimport isObject from '../utils/isObject';\n\ntype Event = { target: any };\n\nexport default (event: unknown) =>\n  isObject(event) && (event as Event).target\n    ? isCheckBoxInput((event as Event).target)\n      ? (event as Event).target.checked\n      : (event as Event).target.value\n    : event;\n","export default (name: string) =>\n  name.substring(0, name.search(/\\.\\d+(\\.|$)/)) || name;\n","import { InternalFieldName } from '../types';\n\nimport getNodeParentName from './getNodeParentName';\n\nexport default (names: Set<InternalFieldName>, name: InternalFieldName) =>\n  names.has(getNodeParentName(name));\n","import isObject from './isObject';\n\nexport default (tempObject: object) => {\n  const prototypeCopy =\n    tempObject.constructor && tempObject.constructor.prototype;\n\n  return (\n    isObject(prototypeCopy) && prototypeCopy.hasOwnProperty('isPrototypeOf')\n  );\n};\n","export default typeof window !== 'undefined' &&\n  typeof window.HTMLElement !== 'undefined' &&\n  typeof document !== 'undefined';\n","import isObject from './isObject';\nimport isPlainObject from './isPlainObject';\nimport isWeb from './isWeb';\n\nexport default function cloneObject<T>(data: T): T {\n  let copy: any;\n  const isArray = Array.isArray(data);\n  const isFileListInstance =\n    typeof FileList !== 'undefined' ? data instanceof FileList : false;\n\n  if (data instanceof Date) {\n    copy = new Date(data);\n  } else if (data instanceof Set) {\n    copy = new Set(data);\n  } else if (\n    !(isWeb && (data instanceof Blob || isFileListInstance)) &&\n    (isArray || isObject(data))\n  ) {\n    copy = isArray ? [] : {};\n\n    if (!isArray && !isPlainObject(data)) {\n      copy = data;\n    } else {\n      for (const key in data) {\n        if (data.hasOwnProperty(key)) {\n          copy[key] = cloneObject(data[key]);\n        }\n      }\n    }\n  } else {\n    return data;\n  }\n\n  return copy;\n}\n","export default <TValue>(value: TValue[]) =>\n  Array.isArray(value) ? value.filter(Boolean) : [];\n","export default (val: unknown): val is undefined => val === undefined;\n","import compact from './compact';\nimport isNullOrUndefined from './isNullOrUndefined';\nimport isObject from './isObject';\nimport isUndefined from './isUndefined';\n\nexport default <T>(\n  object: T,\n  path?: string | null,\n  defaultValue?: unknown,\n): any => {\n  if (!path || !isObject(object)) {\n    return defaultValue;\n  }\n\n  const result = compact(path.split(/[,[\\].]+?/)).reduce(\n    (result, key) =>\n      isNullOrUndefined(result) ? result : result[key as keyof {}],\n    object,\n  );\n\n  return isUndefined(result) || result === object\n    ? isUndefined(object[path as keyof T])\n      ? defaultValue\n      : object[path as keyof T]\n    : result;\n};\n","export default (value: unknown): value is boolean => typeof value === 'boolean';\n","export default (value: string) => /^\\w*$/.test(value);\n","import compact from './compact';\n\nexport default (input: string): string[] =>\n  compact(input.replace(/[\"|']|\\]/g, '').split(/\\.|\\[/));\n","import { FieldPath, FieldValues } from '../types';\n\nimport isKey from './isKey';\nimport isObject from './isObject';\nimport stringToPath from './stringToPath';\n\nexport default (\n  object: FieldValues,\n  path: FieldPath<FieldValues>,\n  value?: unknown,\n) => {\n  let index = -1;\n  const tempPath = isKey(path) ? [path] : stringToPath(path);\n  const length = tempPath.length;\n  const lastIndex = length - 1;\n\n  while (++index < length) {\n    const key = tempPath[index];\n    let newValue = value;\n\n    if (index !== lastIndex) {\n      const objValue = object[key];\n      newValue =\n        isObject(objValue) || Array.isArray(objValue)\n          ? objValue\n          : !isNaN(+tempPath[index + 1])\n            ? []\n            : {};\n    }\n\n    if (key === '__proto__' || key === 'constructor' || key === 'prototype') {\n      return;\n    }\n\n    object[key] = newValue;\n    object = object[key];\n  }\n};\n","export const EVENTS = {\n  BLUR: 'blur',\n  FOCUS_OUT: 'focusout',\n  CHANGE: 'change',\n} as const;\n\nexport const VALIDATION_MODE = {\n  onBlur: 'onBlur',\n  onChange: 'onChange',\n  onSubmit: 'onSubmit',\n  onTouched: 'onTouched',\n  all: 'all',\n} as const;\n\nexport const INPUT_VALIDATION_RULES = {\n  max: 'max',\n  min: 'min',\n  maxLength: 'maxLength',\n  minLength: 'minLength',\n  pattern: 'pattern',\n  required: 'required',\n  validate: 'validate',\n} as const;\n","import React from 'react';\n\nimport { FieldValues, FormProviderProps, UseFormReturn } from './types';\n\nconst HookFormContext = React.createContext<UseFormReturn | null>(null);\n\n/**\n * This custom hook allows you to access the form context. useFormContext is intended to be used in deeply nested structures, where it would become inconvenient to pass the context as a prop. To be used with {@link FormProvider}.\n *\n * @remarks\n * [API](https://react-hook-form.com/docs/useformcontext) • [Demo](https://codesandbox.io/s/react-hook-form-v7-form-context-ytudi)\n *\n * @returns return all useForm methods\n *\n * @example\n * ```tsx\n * function App() {\n *   const methods = useForm();\n *   const onSubmit = data => console.log(data);\n *\n *   return (\n *     <FormProvider {...methods} >\n *       <form onSubmit={methods.handleSubmit(onSubmit)}>\n *         <NestedInput />\n *         <input type=\"submit\" />\n *       </form>\n *     </FormProvider>\n *   );\n * }\n *\n *  function NestedInput() {\n *   const { register } = useFormContext(); // retrieve all hook methods\n *   return <input {...register(\"test\")} />;\n * }\n * ```\n */\nexport const useFormContext = <\n  TFieldValues extends FieldValues,\n  TContext = any,\n  TTransformedValues = TFieldValues,\n>(): UseFormReturn<TFieldValues, TContext, TTransformedValues> =>\n  React.useContext(HookFormContext) as UseFormReturn<\n    TFieldValues,\n    TContext,\n    TTransformedValues\n  >;\n\n/**\n * A provider component that propagates the `useForm` methods to all children components via [React Context](https://reactjs.org/docs/context.html) API. To be used with {@link useFormContext}.\n *\n * @remarks\n * [API](https://react-hook-form.com/docs/useformcontext) • [Demo](https://codesandbox.io/s/react-hook-form-v7-form-context-ytudi)\n *\n * @param props - all useForm methods\n *\n * @example\n * ```tsx\n * function App() {\n *   const methods = useForm();\n *   const onSubmit = data => console.log(data);\n *\n *   return (\n *     <FormProvider {...methods} >\n *       <form onSubmit={methods.handleSubmit(onSubmit)}>\n *         <NestedInput />\n *         <input type=\"submit\" />\n *       </form>\n *     </FormProvider>\n *   );\n * }\n *\n *  function NestedInput() {\n *   const { register } = useFormContext(); // retrieve all hook methods\n *   return <input {...register(\"test\")} />;\n * }\n * ```\n */\nexport const FormProvider = <\n  TFieldValues extends FieldValues,\n  TContext = any,\n  TTransformedValues = TFieldValues,\n>(\n  props: FormProviderProps<TFieldValues, TContext, TTransformedValues>,\n) => {\n  const { children, ...data } = props;\n  return (\n    <HookFormContext.Provider value={data as unknown as UseFormReturn}>\n      {children}\n    </HookFormContext.Provider>\n  );\n};\n","import { VALIDATION_MODE } from '../constants';\nimport { Control, FieldValues, FormState, ReadFormState } from '../types';\n\nexport default <\n  TFieldValues extends FieldValues,\n  TContext = any,\n  TTransformedValues = TFieldValues,\n>(\n  formState: FormState<TFieldValues>,\n  control: Control<TFieldValues, TContext, TTransformedValues>,\n  localProxyFormState?: ReadFormState,\n  isRoot = true,\n) => {\n  const result = {\n    defaultValues: control._defaultValues,\n  } as typeof formState;\n\n  for (const key in formState) {\n    Object.defineProperty(result, key, {\n      get: () => {\n        const _key = key as keyof FormState<TFieldValues> & keyof ReadFormState;\n\n        if (control._proxyFormState[_key] !== VALIDATION_MODE.all) {\n          control._proxyFormState[_key] = !isRoot || VALIDATION_MODE.all;\n        }\n\n        localProxyFormState && (localProxyFormState[_key] = true);\n        return formState[_key];\n      },\n    });\n  }\n\n  return result;\n};\n","import React from 'react';\n\nimport getProxyFormState from './logic/getProxyFormState';\nimport {\n  FieldValues,\n  InternalFieldName,\n  UseFormStateProps,\n  UseFormStateReturn,\n} from './types';\nimport { useFormContext } from './useFormContext';\n\n/**\n * This custom hook allows you to subscribe to each form state, and isolate the re-render at the custom hook level. It has its scope in terms of form state subscription, so it would not affect other useFormState and useForm. Using this hook can reduce the re-render impact on large and complex form application.\n *\n * @remarks\n * [API](https://react-hook-form.com/docs/useformstate) • [Demo](https://codesandbox.io/s/useformstate-75xly)\n *\n * @param props - include options on specify fields to subscribe. {@link UseFormStateReturn}\n *\n * @example\n * ```tsx\n * function App() {\n *   const { register, handleSubmit, control } = useForm({\n *     defaultValues: {\n *     firstName: \"firstName\"\n *   }});\n *   const { dirtyFields } = useFormState({\n *     control\n *   });\n *   const onSubmit = (data) => console.log(data);\n *\n *   return (\n *     <form onSubmit={handleSubmit(onSubmit)}>\n *       <input {...register(\"firstName\")} placeholder=\"First Name\" />\n *       {dirtyFields.firstName && <p>Field is dirty.</p>}\n *       <input type=\"submit\" />\n *     </form>\n *   );\n * }\n * ```\n */\nfunction useFormState<\n  TFieldValues extends FieldValues = FieldValues,\n  TTransformedValues = TFieldValues,\n>(\n  props?: UseFormStateProps<TFieldValues, TTransformedValues>,\n): UseFormStateReturn<TFieldValues> {\n  const methods = useFormContext<TFieldValues, any, TTransformedValues>();\n  const { control = methods.control, disabled, name, exact } = props || {};\n  const [formState, updateFormState] = React.useState(control._formState);\n  const _localProxyFormState = React.useRef({\n    isDirty: false,\n    isLoading: false,\n    dirtyFields: false,\n    touchedFields: false,\n    validatingFields: false,\n    isValidating: false,\n    isValid: false,\n    errors: false,\n  });\n  const _name = React.useRef(name);\n\n  _name.current = name;\n\n  React.useEffect(\n    () =>\n      control._subscribe({\n        name: _name.current as InternalFieldName,\n        formState: _localProxyFormState.current,\n        exact,\n        callback: (formState) => {\n          !disabled &&\n            updateFormState({\n              ...control._formState,\n              ...formState,\n            });\n        },\n      }),\n    [control, disabled, exact],\n  );\n\n  React.useEffect(() => {\n    _localProxyFormState.current.isValid && control._setValid(true);\n  }, [control]);\n\n  return React.useMemo(\n    () =>\n      getProxyFormState(\n        formState,\n        control,\n        _localProxyFormState.current,\n        false,\n      ),\n    [formState, control],\n  );\n}\n\nexport { useFormState };\n","export default (value: unknown): value is string => typeof value === 'string';\n","import { DeepPartial, FieldValues, Names } from '../types';\nimport get from '../utils/get';\nimport isString from '../utils/isString';\n\nexport default <T>(\n  names: string | string[] | undefined,\n  _names: Names,\n  formValues?: FieldValues,\n  isGlobal?: boolean,\n  defaultValue?: DeepPartial<T> | unknown,\n) => {\n  if (isString(names)) {\n    isGlobal && _names.watch.add(names);\n    return get(formValues, names, defaultValue);\n  }\n\n  if (Array.isArray(names)) {\n    return names.map(\n      (fieldName) => (\n        isGlobal && _names.watch.add(fieldName), get(formValues, fieldName)\n      ),\n    );\n  }\n\n  isGlobal && (_names.watchAll = true);\n\n  return formValues;\n};\n","import React from 'react';\n\nimport generateWatchOutput from './logic/generateWatchOutput';\nimport {\n  Control,\n  DeepPartialSkipArrayKey,\n  FieldPath,\n  FieldPathValue,\n  FieldPathValues,\n  FieldValues,\n  InternalFieldName,\n  UseWatchProps,\n} from './types';\nimport { useFormContext } from './useFormContext';\n\n/**\n * Subscribe to the entire form values change and re-render at the hook level.\n *\n * @remarks\n *\n * [API](https://react-hook-form.com/docs/usewatch) • [Demo](https://codesandbox.io/s/react-hook-form-v7-ts-usewatch-h9i5e)\n *\n * @param props - defaultValue, disable subscription and match exact name.\n *\n * @example\n * ```tsx\n * const { control } = useForm();\n * const values = useWatch({\n *   control,\n *   defaultValue: {\n *     name: \"data\"\n *   },\n *   exact: false,\n * })\n * ```\n */\nexport function useWatch<\n  TFieldValues extends FieldValues = FieldValues,\n  TTransformedValues = TFieldValues,\n>(props: {\n  defaultValue?: DeepPartialSkipArrayKey<TFieldValues>;\n  control?: Control<TFieldValues, any, TTransformedValues>;\n  disabled?: boolean;\n  exact?: boolean;\n}): DeepPartialSkipArrayKey<TFieldValues>;\n/**\n * Custom hook to subscribe to field change and isolate re-rendering at the component level.\n *\n * @remarks\n *\n * [API](https://react-hook-form.com/docs/usewatch) • [Demo](https://codesandbox.io/s/react-hook-form-v7-ts-usewatch-h9i5e)\n *\n * @param props - defaultValue, disable subscription and match exact name.\n *\n * @example\n * ```tsx\n * const { control } = useForm();\n * const values = useWatch({\n *   control,\n *   name: \"fieldA\",\n *   defaultValue: \"default value\",\n *   exact: false,\n * })\n * ```\n */\nexport function useWatch<\n  TFieldValues extends FieldValues = FieldValues,\n  TFieldName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\n  TTransformedValues = TFieldValues,\n>(props: {\n  name: TFieldName;\n  defaultValue?: FieldPathValue<TFieldValues, TFieldName>;\n  control?: Control<TFieldValues, any, TTransformedValues>;\n  disabled?: boolean;\n  exact?: boolean;\n}): FieldPathValue<TFieldValues, TFieldName>;\n/**\n * Custom hook to subscribe to field change and isolate re-rendering at the component level.\n *\n * @remarks\n *\n * [API](https://react-hook-form.com/docs/usewatch) • [Demo](https://codesandbox.io/s/react-hook-form-v7-ts-usewatch-h9i5e)\n *\n * @param props - defaultValue, disable subscription and match exact name.\n *\n * @example\n * ```tsx\n * const { control } = useForm();\n * const values = useWatch({\n *   control,\n *   name: [\"fieldA\", \"fieldB\"],\n *   defaultValue: {\n *     fieldA: \"data\",\n *     fieldB: \"data\"\n *   },\n *   exact: false,\n * })\n * ```\n */\nexport function useWatch<\n  TFieldValues extends FieldValues = FieldValues,\n  TFieldNames extends\n    readonly FieldPath<TFieldValues>[] = readonly FieldPath<TFieldValues>[],\n  TTransformedValues = TFieldValues,\n>(props: {\n  name: readonly [...TFieldNames];\n  defaultValue?: DeepPartialSkipArrayKey<TFieldValues>;\n  control?: Control<TFieldValues, any, TTransformedValues>;\n  disabled?: boolean;\n  exact?: boolean;\n}): FieldPathValues<TFieldValues, TFieldNames>;\n/**\n * Custom hook to subscribe to field change and isolate re-rendering at the component level.\n *\n * @remarks\n *\n * [API](https://react-hook-form.com/docs/usewatch) • [Demo](https://codesandbox.io/s/react-hook-form-v7-ts-usewatch-h9i5e)\n *\n * @example\n * ```tsx\n * // can skip passing down the control into useWatch if the form is wrapped with the FormProvider\n * const values = useWatch()\n * ```\n */\nexport function useWatch<\n  TFieldValues extends FieldValues = FieldValues,\n>(): DeepPartialSkipArrayKey<TFieldValues>;\n/**\n * Custom hook to subscribe to field change and isolate re-rendering at the component level.\n *\n * @remarks\n *\n * [API](https://react-hook-form.com/docs/usewatch) • [Demo](https://codesandbox.io/s/react-hook-form-v7-ts-usewatch-h9i5e)\n *\n * @example\n * ```tsx\n * const { control } = useForm();\n * const values = useWatch({\n *   name: \"fieldName\"\n *   control,\n * })\n * ```\n */\nexport function useWatch<TFieldValues extends FieldValues>(\n  props?: UseWatchProps<TFieldValues>,\n) {\n  const methods = useFormContext();\n  const {\n    control = methods.control,\n    name,\n    defaultValue,\n    disabled,\n    exact,\n  } = props || {};\n  const _name = React.useRef(name);\n  const _defaultValue = React.useRef(defaultValue);\n\n  _name.current = name;\n\n  React.useEffect(\n    () =>\n      control._subscribe({\n        name: _name.current as InternalFieldName,\n        formState: {\n          values: true,\n        },\n        exact,\n        callback: (formState) =>\n          !disabled &&\n          updateValue(\n            generateWatchOutput(\n              _name.current as InternalFieldName | InternalFieldName[],\n              control._names,\n              formState.values || control._formValues,\n              false,\n              _defaultValue.current,\n            ),\n          ),\n      }),\n    [control, disabled, exact],\n  );\n\n  const [value, updateValue] = React.useState(\n    control._getWatch(\n      name as InternalFieldName,\n      defaultValue as DeepPartialSkipArrayKey<TFieldValues>,\n    ),\n  );\n\n  React.useEffect(() => control._removeUnmounted());\n\n  return value;\n}\n","import {\n  InternalFieldErrors,\n  InternalFieldName,\n  ValidateResult,\n} from '../types';\n\nexport default (\n  name: InternalFieldName,\n  validateAllFieldCriteria: boolean,\n  errors: InternalFieldErrors,\n  type: string,\n  message: ValidateResult,\n) =>\n  validateAllFieldCriteria\n    ? {\n        ...errors[name],\n        types: {\n          ...(errors[name] && errors[name]!.types ? errors[name]!.types : {}),\n          [type]: message || true,\n        },\n      }\n    : {};\n","export default <T>(value: T) => (Array.isArray(value) ? value : [value]);\n","import { Noop } from '../types';\n\nexport type Observer<T> = {\n  next: (value: T) => void;\n};\n\nexport type Subscription = {\n  unsubscribe: Noop;\n};\n\nexport type Subject<T> = {\n  readonly observers: Observer<T>[];\n  subscribe: (value: Observer<T>) => Subscription;\n  unsubscribe: Noop;\n} & Observer<T>;\n\nexport default <T>(): Subject<T> => {\n  let _observers: Observer<T>[] = [];\n\n  const next = (value: T) => {\n    for (const observer of _observers) {\n      observer.next && observer.next(value);\n    }\n  };\n\n  const subscribe = (observer: Observer<T>): Subscription => {\n    _observers.push(observer);\n    return {\n      unsubscribe: () => {\n        _observers = _observers.filter((o) => o !== observer);\n      },\n    };\n  };\n\n  const unsubscribe = () => {\n    _observers = [];\n  };\n\n  return {\n    get observers() {\n      return _observers;\n    },\n    next,\n    subscribe,\n    unsubscribe,\n  };\n};\n","import { Primitive } from '../types';\n\nimport isNullOrUndefined from './isNullOrUndefined';\nimport { isObjectType } from './isObject';\n\nexport default (value: unknown): value is Primitive =>\n  isNullOrUndefined(value) || !isObjectType(value);\n","import isObject from '../utils/isObject';\n\nimport isDateObject from './isDateObject';\nimport isPrimitive from './isPrimitive';\n\nexport default function deepEqual(object1: any, object2: any) {\n  if (isPrimitive(object1) || isPrimitive(object2)) {\n    return object1 === object2;\n  }\n\n  if (isDateObject(object1) && isDateObject(object2)) {\n    return object1.getTime() === object2.getTime();\n  }\n\n  const keys1 = Object.keys(object1);\n  const keys2 = Object.keys(object2);\n\n  if (keys1.length !== keys2.length) {\n    return false;\n  }\n\n  for (const key of keys1) {\n    const val1 = object1[key];\n\n    if (!keys2.includes(key)) {\n      return false;\n    }\n\n    if (key !== 'ref') {\n      const val2 = object2[key];\n\n      if (\n        (isDateObject(val1) && isDateObject(val2)) ||\n        (isObject(val1) && isObject(val2)) ||\n        (Array.isArray(val1) && Array.isArray(val2))\n          ? !deepEqual(val1, val2)\n          : val1 !== val2\n      ) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n","import { EmptyObject } from '../types';\n\nimport isObject from './isObject';\n\nexport default (value: unknown): value is EmptyObject =>\n  isObject(value) && !Object.keys(value).length;\n","import { FieldElement } from '../types';\n\nexport default (element: FieldElement): element is HTMLInputElement =>\n  element.type === 'file';\n","export default (value: unknown): value is Function =>\n  typeof value === 'function';\n","import isWeb from './isWeb';\n\nexport default (value: unknown): value is HTMLElement => {\n  if (!isWeb) {\n    return false;\n  }\n\n  const owner = value ? ((value as HTMLElement).ownerDocument as Document) : 0;\n  return (\n    value instanceof\n    (owner && owner.defaultView ? owner.defaultView.HTMLElement : HTMLElement)\n  );\n};\n","import { FieldElement } from '../types';\n\nexport default (element: FieldElement): element is HTMLSelectElement =>\n  element.type === `select-multiple`;\n","import { FieldElement } from '../types';\n\nexport default (element: FieldElement): element is HTMLInputElement =>\n  element.type === 'radio';\n","import { FieldElement } from '../types';\n\nimport isCheckBoxInput from './isCheckBoxInput';\nimport isRadioInput from './isRadioInput';\n\nexport default (ref: FieldElement): ref is HTMLInputElement =>\n  isRadioInput(ref) || isCheckBoxInput(ref);\n","import { Ref } from '../types';\n\nimport isHTMLElement from './isHTMLElement';\n\nexport default (ref: Ref) => isHTMLElement(ref) && ref.isConnected;\n","import isEmptyObject from './isEmptyObject';\nimport isKey from './isKey';\nimport isObject from './isObject';\nimport isUndefined from './isUndefined';\nimport stringToPath from './stringToPath';\n\nfunction baseGet(object: any, updatePath: (string | number)[]) {\n  const length = updatePath.slice(0, -1).length;\n  let index = 0;\n\n  while (index < length) {\n    object = isUndefined(object) ? index++ : object[updatePath[index++]];\n  }\n\n  return object;\n}\n\nfunction isEmptyArray(obj: unknown[]) {\n  for (const key in obj) {\n    if (obj.hasOwnProperty(key) && !isUndefined(obj[key])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport default function unset(object: any, path: string | (string | number)[]) {\n  const paths = Array.isArray(path)\n    ? path\n    : isKey(path)\n      ? [path]\n      : stringToPath(path);\n\n  const childObject = paths.length === 1 ? object : baseGet(object, paths);\n\n  const index = paths.length - 1;\n  const key = paths[index];\n\n  if (childObject) {\n    delete childObject[key];\n  }\n\n  if (\n    index !== 0 &&\n    ((isObject(childObject) && isEmptyObject(childObject)) ||\n      (Array.isArray(childObject) && isEmptyArray(childObject)))\n  ) {\n    unset(object, paths.slice(0, -1));\n  }\n\n  return object;\n}\n","import isFunction from './isFunction';\n\nexport default <T>(data: T): boolean => {\n  for (const key in data) {\n    if (isFunction(data[key])) {\n      return true;\n    }\n  }\n  return false;\n};\n","import deepEqual from '../utils/deepEqual';\nimport isNullOrUndefined from '../utils/isNullOrUndefined';\nimport isObject from '../utils/isObject';\nimport isPrimitive from '../utils/isPrimitive';\nimport isUndefined from '../utils/isUndefined';\nimport objectHasFunction from '../utils/objectHasFunction';\n\nfunction markFieldsDirty<T>(data: T, fields: Record<string, any> = {}) {\n  const isParentNodeArray = Array.isArray(data);\n\n  if (isObject(data) || isParentNodeArray) {\n    for (const key in data) {\n      if (\n        Array.isArray(data[key]) ||\n        (isObject(data[key]) && !objectHasFunction(data[key]))\n      ) {\n        fields[key] = Array.isArray(data[key]) ? [] : {};\n        markFieldsDirty(data[key], fields[key]);\n      } else if (!isNullOrUndefined(data[key])) {\n        fields[key] = true;\n      }\n    }\n  }\n\n  return fields;\n}\n\nfunction getDirtyFieldsFromDefaultValues<T>(\n  data: T,\n  formValues: T,\n  dirtyFieldsFromValues: Record<\n    Extract<keyof T, string>,\n    ReturnType<typeof markFieldsDirty> | boolean\n  >,\n) {\n  const isParentNodeArray = Array.isArray(data);\n\n  if (isObject(data) || isParentNodeArray) {\n    for (const key in data) {\n      if (\n        Array.isArray(data[key]) ||\n        (isObject(data[key]) && !objectHasFunction(data[key]))\n      ) {\n        if (\n          isUndefined(formValues) ||\n          isPrimitive(dirtyFieldsFromValues[key])\n        ) {\n          dirtyFieldsFromValues[key] = Array.isArray(data[key])\n            ? markFieldsDirty(data[key], [])\n            : { ...markFieldsDirty(data[key]) };\n        } else {\n          getDirtyFieldsFromDefaultValues(\n            data[key],\n            isNullOrUndefined(formValues) ? {} : formValues[key],\n            dirtyFieldsFromValues[key],\n          );\n        }\n      } else {\n        dirtyFieldsFromValues[key] = !deepEqual(data[key], formValues[key]);\n      }\n    }\n  }\n\n  return dirtyFieldsFromValues;\n}\n\nexport default <T>(defaultValues: T, formValues: T) =>\n  getDirtyFieldsFromDefaultValues(\n    defaultValues,\n    formValues,\n    markFieldsDirty(formValues),\n  );\n","import isUndefined from '../utils/isUndefined';\n\ntype CheckboxFieldResult = {\n  isValid: boolean;\n  value: string | string[] | boolean | undefined;\n};\n\nconst defaultResult: CheckboxFieldResult = {\n  value: false,\n  isValid: false,\n};\n\nconst validResult = { value: true, isValid: true };\n\nexport default (options?: HTMLInputElement[]): CheckboxFieldResult => {\n  if (Array.isArray(options)) {\n    if (options.length > 1) {\n      const values = options\n        .filter((option) => option && option.checked && !option.disabled)\n        .map((option) => option.value);\n      return { value: values, isValid: !!values.length };\n    }\n\n    return options[0].checked && !options[0].disabled\n      ? // @ts-expect-error expected to work in the browser\n        options[0].attributes && !isUndefined(options[0].attributes.value)\n        ? isUndefined(options[0].value) || options[0].value === ''\n          ? validResult\n          : { value: options[0].value, isValid: true }\n        : validResult\n      : defaultResult;\n  }\n\n  return defaultResult;\n};\n","import { Field, NativeFieldValue } from '../types';\nimport isString from '../utils/isString';\nimport isUndefined from '../utils/isUndefined';\n\nexport default <T extends NativeFieldValue>(\n  value: T,\n  { valueAsNumber, valueAsDate, setValueAs }: Field['_f'],\n) =>\n  isUndefined(value)\n    ? value\n    : valueAsNumber\n      ? value === ''\n        ? NaN\n        : value\n          ? +value\n          : value\n      : valueAsDate && isString(value)\n        ? new Date(value)\n        : setValueAs\n          ? setValueAs(value)\n          : value;\n","type RadioFieldResult = {\n  isValid: boolean;\n  value: number | string | null;\n};\n\nconst defaultReturn: RadioFieldResult = {\n  isValid: false,\n  value: null,\n};\n\nexport default (options?: HTMLInputElement[]): RadioFieldResult =>\n  Array.isArray(options)\n    ? options.reduce(\n        (previous, option): RadioFieldResult =>\n          option && option.checked && !option.disabled\n            ? {\n                isValid: true,\n                value: option.value,\n              }\n            : previous,\n        defaultReturn,\n      )\n    : defaultReturn;\n","import { Field } from '../types';\nimport isCheckBox from '../utils/isCheckBoxInput';\nimport isFileInput from '../utils/isFileInput';\nimport isMultipleSelect from '../utils/isMultipleSelect';\nimport isRadioInput from '../utils/isRadioInput';\nimport isUndefined from '../utils/isUndefined';\n\nimport getCheckboxValue from './getCheckboxValue';\nimport getFieldValueAs from './getFieldValueAs';\nimport getRadioValue from './getRadioValue';\n\nexport default function getFieldValue(_f: Field['_f']) {\n  const ref = _f.ref;\n\n  if (isFileInput(ref)) {\n    return ref.files;\n  }\n\n  if (isRadioInput(ref)) {\n    return getRadioValue(_f.refs).value;\n  }\n\n  if (isMultipleSelect(ref)) {\n    return [...ref.selectedOptions].map(({ value }) => value);\n  }\n\n  if (isCheckBox(ref)) {\n    return getCheckboxValue(_f.refs).value;\n  }\n\n  return getFieldValueAs(isUndefined(ref.value) ? _f.ref.value : ref.value, _f);\n}\n","import {\n  CriteriaMode,\n  Field,\n  FieldName,\n  FieldRefs,\n  FieldValues,\n  InternalFieldName,\n} from '../types';\nimport { get } from '../utils';\nimport set from '../utils/set';\n\nexport default <TFieldValues extends FieldValues>(\n  fieldsNames: Set<InternalFieldName> | InternalFieldName[],\n  _fields: FieldRefs,\n  criteriaMode?: CriteriaMode,\n  shouldUseNativeValidation?: boolean | undefined,\n) => {\n  const fields: Record<InternalFieldName, Field['_f']> = {};\n\n  for (const name of fieldsNames) {\n    const field: Field = get(_fields, name);\n\n    field && set(fields, name, field._f);\n  }\n\n  return {\n    criteriaMode,\n    names: [...fieldsNames] as FieldName<TFieldValues>[],\n    fields,\n    shouldUseNativeValidation,\n  };\n};\n","export default (value: unknown): value is RegExp => value instanceof RegExp;\n","import {\n  ValidationRule,\n  ValidationValue,\n  ValidationValueMessage,\n} from '../types';\nimport isObject from '../utils/isObject';\nimport isRegex from '../utils/isRegex';\nimport isUndefined from '../utils/isUndefined';\n\nexport default <T extends ValidationValue>(\n  rule?: ValidationRule<T> | ValidationValueMessage<T>,\n) =>\n  isUndefined(rule)\n    ? rule\n    : isRegex(rule)\n      ? rule.source\n      : isObject(rule)\n        ? isRegex(rule.value)\n          ? rule.value.source\n          : rule.value\n        : rule;\n","import { VALIDATION_MODE } from '../constants';\nimport { Mode, ValidationModeFlags } from '../types';\n\nexport default (mode?: Mode): ValidationModeFlags => ({\n  isOnSubmit: !mode || mode === VALIDATION_MODE.onSubmit,\n  isOnBlur: mode === VALIDATION_MODE.onBlur,\n  isOnChange: mode === VALIDATION_MODE.onChange,\n  isOnAll: mode === VALIDATION_MODE.all,\n  isOnTouch: mode === VALIDATION_MODE.onTouched,\n});\n","import { Field, Validate } from '../types';\nimport isFunction from '../utils/isFunction';\nimport isObject from '../utils/isObject';\n\nconst ASYNC_FUNCTION = 'AsyncFunction';\n\nexport default (fieldReference: Field['_f']) =>\n  !!fieldReference &&\n  !!fieldReference.validate &&\n  !!(\n    (isFunction(fieldReference.validate) &&\n      fieldReference.validate.constructor.name === ASYNC_FUNCTION) ||\n    (isObject(fieldReference.validate) &&\n      Object.values(fieldReference.validate).find(\n        (validateFunction: Validate<unknown, unknown>) =>\n          validateFunction.constructor.name === ASYNC_FUNCTION,\n      ))\n  );\n","import { Field } from '../types';\n\nexport default (options: Field['_f']) =>\n  options.mount &&\n  (options.required ||\n    options.min ||\n    options.max ||\n    options.maxLength ||\n    options.minLength ||\n    options.pattern ||\n    options.validate);\n","import { InternalFieldName, Names } from '../types';\n\nexport default (\n  name: InternalFieldName,\n  _names: Names,\n  isBlurEvent?: boolean,\n) =>\n  !isBlurEvent &&\n  (_names.watchAll ||\n    _names.watch.has(name) ||\n    [..._names.watch].some(\n      (watchName) =>\n        name.startsWith(watchName) &&\n        /^\\.\\w+/.test(name.slice(watchName.length)),\n    ));\n","import { FieldRefs, InternalFieldName, Ref } from '../types';\nimport { get } from '../utils';\nimport isObject from '../utils/isObject';\n\nconst iterateFieldsByAction = (\n  fields: FieldRefs,\n  action: (ref: Ref, name: string) => 1 | undefined | void,\n  fieldsNames?: Set<InternalFieldName> | InternalFieldName[] | 0,\n  abortEarly?: boolean,\n) => {\n  for (const key of fieldsNames || Object.keys(fields)) {\n    const field = get(fields, key);\n\n    if (field) {\n      const { _f, ...currentField } = field;\n\n      if (_f) {\n        if (_f.refs && _f.refs[0] && action(_f.refs[0], key) && !abortEarly) {\n          return true;\n        } else if (_f.ref && action(_f.ref, _f.name) && !abortEarly) {\n          return true;\n        } else {\n          if (iterateFieldsByAction(currentField, action)) {\n            break;\n          }\n        }\n      } else if (isObject(currentField)) {\n        if (iterateFieldsByAction(currentField as FieldRefs, action)) {\n          break;\n        }\n      }\n    }\n  }\n  return;\n};\nexport default iterateFieldsByAction;\n","import { FieldError, FieldErrors, FieldValues } from '../types';\nimport get from '../utils/get';\nimport isKey from '../utils/isKey';\n\nexport default function schemaErrorLookup<T extends FieldValues = FieldValues>(\n  errors: FieldErrors<T>,\n  _fields: FieldValues,\n  name: string,\n): {\n  error?: FieldError;\n  name: string;\n} {\n  const error = get(errors, name);\n\n  if (error || isKey(name)) {\n    return {\n      error,\n      name,\n    };\n  }\n\n  const names = name.split('.');\n\n  while (names.length) {\n    const fieldName = names.join('.');\n    const field = get(_fields, fieldName);\n    const foundError = get(errors, fieldName);\n\n    if (field && !Array.isArray(field) && name !== fieldName) {\n      return { name };\n    }\n\n    if (foundError && foundError.type) {\n      return {\n        name: fieldName,\n        error: foundError,\n      };\n    }\n\n    names.pop();\n  }\n\n  return {\n    name,\n  };\n}\n","import { VALIDATION_MODE } from '../constants';\nimport {\n  FieldValues,\n  FormState,\n  InternalFieldName,\n  ReadFormState,\n} from '../types';\nimport isEmptyObject from '../utils/isEmptyObject';\n\nexport default <T extends FieldValues, K extends ReadFormState>(\n  formStateData: Partial<FormState<T>> & {\n    name?: InternalFieldName;\n    values?: T;\n  },\n  _proxyFormState: K,\n  updateFormState: (formState: Partial<FormState<T>>) => void,\n  isRoot?: boolean,\n) => {\n  updateFormState(formStateData);\n  const { name, ...formState } = formStateData;\n\n  return (\n    isEmptyObject(formState) ||\n    Object.keys(formState).length >= Object.keys(_proxyFormState).length ||\n    Object.keys(formState).find(\n      (key) =>\n        _proxyFormState[key as keyof ReadFormState] ===\n        (!isRoot || VALIDATION_MODE.all),\n    )\n  );\n};\n","import convertToArrayPayload from '../utils/convertToArrayPayload';\n\nexport default <T extends string | string[] | undefined>(\n  name?: T,\n  signalName?: string,\n  exact?: boolean,\n) =>\n  !name ||\n  !signalName ||\n  name === signalName ||\n  convertToArrayPayload(name).some(\n    (currentName) =>\n      currentName &&\n      (exact\n        ? currentName === signalName\n        : currentName.startsWith(signalName) ||\n          signalName.startsWith(currentName)),\n  );\n","import { ValidationModeFlags } from '../types';\n\nexport default (\n  isBlurEvent: boolean,\n  isTouched: boolean,\n  isSubmitted: boolean,\n  reValidateMode: {\n    isOnBlur: boolean;\n    isOnChange: boolean;\n  },\n  mode: Partial<ValidationModeFlags>,\n) => {\n  if (mode.isOnAll) {\n    return false;\n  } else if (!isSubmitted && mode.isOnTouch) {\n    return !(isTouched || isBlurEvent);\n  } else if (isSubmitted ? reValidateMode.isOnBlur : mode.isOnBlur) {\n    return !isBlurEvent;\n  } else if (isSubmitted ? reValidateMode.isOnChange : mode.isOnChange) {\n    return isBlurEvent;\n  }\n  return true;\n};\n","import compact from '../utils/compact';\nimport get from '../utils/get';\nimport unset from '../utils/unset';\n\nexport default <T>(ref: T, name: string) =>\n  !compact(get(ref, name)).length && unset(ref, name);\n","import {\n  FieldError,\n  FieldErrors,\n  FieldValues,\n  InternalFieldName,\n} from '../types';\nimport convertToArrayPayload from '../utils/convertToArrayPayload';\nimport get from '../utils/get';\nimport set from '../utils/set';\n\nexport default <T extends FieldValues = FieldValues>(\n  errors: FieldErrors<T>,\n  error: Partial<Record<string, FieldError>>,\n  name: InternalFieldName,\n): FieldErrors<T> => {\n  const fieldArrayErrors = convertToArrayPayload(get(errors, name));\n  set(fieldArrayErrors, 'root', error[name]);\n  set(errors, name, fieldArrayErrors);\n  return errors;\n};\n","import { Message } from '../types';\nimport isString from '../utils/isString';\n\nexport default (value: unknown): value is Message => isString(value);\n","import { FieldError, Ref, ValidateResult } from '../types';\nimport isBoolean from '../utils/isBoolean';\nimport isMessage from '../utils/isMessage';\n\nexport default function getValidateError(\n  result: ValidateResult,\n  ref: Ref,\n  type = 'validate',\n): FieldError | void {\n  if (\n    isMessage(result) ||\n    (Array.isArray(result) && result.every(isMessage)) ||\n    (isBoolean(result) && !result)\n  ) {\n    return {\n      type,\n      message: isMessage(result) ? result : '',\n      ref,\n    };\n  }\n}\n","import { ValidationRule } from '../types';\nimport isObject from '../utils/isObject';\nimport isRegex from '../utils/isRegex';\n\nexport default (validationData?: ValidationRule) =>\n  isObject(validationData) && !isRegex(validationData)\n    ? validationData\n    : {\n        value: validationData,\n        message: '',\n      };\n","import { INPUT_VALIDATION_RULES } from '../constants';\nimport {\n  Field,\n  FieldError,\n  FieldValues,\n  InternalFieldErrors,\n  InternalNameSet,\n  MaxType,\n  Message,\n  MinType,\n  NativeFieldValue,\n} from '../types';\nimport get from '../utils/get';\nimport isBoolean from '../utils/isBoolean';\nimport isCheckBoxInput from '../utils/isCheckBoxInput';\nimport isEmptyObject from '../utils/isEmptyObject';\nimport isFileInput from '../utils/isFileInput';\nimport isFunction from '../utils/isFunction';\nimport isHTMLElement from '../utils/isHTMLElement';\nimport isMessage from '../utils/isMessage';\nimport isNullOrUndefined from '../utils/isNullOrUndefined';\nimport isObject from '../utils/isObject';\nimport isRadioInput from '../utils/isRadioInput';\nimport isRegex from '../utils/isRegex';\nimport isString from '../utils/isString';\nimport isUndefined from '../utils/isUndefined';\n\nimport appendErrors from './appendErrors';\nimport getCheckboxValue from './getCheckboxValue';\nimport getRadioValue from './getRadioValue';\nimport getValidateError from './getValidateError';\nimport getValueAndMessage from './getValueAndMessage';\n\nexport default async <T extends FieldValues>(\n  field: Field,\n  disabledFieldNames: InternalNameSet,\n  formValues: T,\n  validateAllFieldCriteria: boolean,\n  shouldUseNativeValidation?: boolean,\n  isFieldArray?: boolean,\n): Promise<InternalFieldErrors> => {\n  const {\n    ref,\n    refs,\n    required,\n    maxLength,\n    minLength,\n    min,\n    max,\n    pattern,\n    validate,\n    name,\n    valueAsNumber,\n    mount,\n  } = field._f;\n  const inputValue: NativeFieldValue = get(formValues, name);\n  if (!mount || disabledFieldNames.has(name)) {\n    return {};\n  }\n  const inputRef: HTMLInputElement = refs ? refs[0] : (ref as HTMLInputElement);\n  const setCustomValidity = (message?: string | boolean) => {\n    if (shouldUseNativeValidation && inputRef.reportValidity) {\n      inputRef.setCustomValidity(isBoolean(message) ? '' : message || '');\n      inputRef.reportValidity();\n    }\n  };\n  const error: InternalFieldErrors = {};\n  const isRadio = isRadioInput(ref);\n  const isCheckBox = isCheckBoxInput(ref);\n  const isRadioOrCheckbox = isRadio || isCheckBox;\n  const isEmpty =\n    ((valueAsNumber || isFileInput(ref)) &&\n      isUndefined(ref.value) &&\n      isUndefined(inputValue)) ||\n    (isHTMLElement(ref) && ref.value === '') ||\n    inputValue === '' ||\n    (Array.isArray(inputValue) && !inputValue.length);\n  const appendErrorsCurry = appendErrors.bind(\n    null,\n    name,\n    validateAllFieldCriteria,\n    error,\n  );\n  const getMinMaxMessage = (\n    exceedMax: boolean,\n    maxLengthMessage: Message,\n    minLengthMessage: Message,\n    maxType: MaxType = INPUT_VALIDATION_RULES.maxLength,\n    minType: MinType = INPUT_VALIDATION_RULES.minLength,\n  ) => {\n    const message = exceedMax ? maxLengthMessage : minLengthMessage;\n    error[name] = {\n      type: exceedMax ? maxType : minType,\n      message,\n      ref,\n      ...appendErrorsCurry(exceedMax ? maxType : minType, message),\n    };\n  };\n\n  if (\n    isFieldArray\n      ? !Array.isArray(inputValue) || !inputValue.length\n      : required &&\n        ((!isRadioOrCheckbox && (isEmpty || isNullOrUndefined(inputValue))) ||\n          (isBoolean(inputValue) && !inputValue) ||\n          (isCheckBox && !getCheckboxValue(refs).isValid) ||\n          (isRadio && !getRadioValue(refs).isValid))\n  ) {\n    const { value, message } = isMessage(required)\n      ? { value: !!required, message: required }\n      : getValueAndMessage(required);\n\n    if (value) {\n      error[name] = {\n        type: INPUT_VALIDATION_RULES.required,\n        message,\n        ref: inputRef,\n        ...appendErrorsCurry(INPUT_VALIDATION_RULES.required, message),\n      };\n      if (!validateAllFieldCriteria) {\n        setCustomValidity(message);\n        return error;\n      }\n    }\n  }\n\n  if (!isEmpty && (!isNullOrUndefined(min) || !isNullOrUndefined(max))) {\n    let exceedMax;\n    let exceedMin;\n    const maxOutput = getValueAndMessage(max);\n    const minOutput = getValueAndMessage(min);\n\n    if (!isNullOrUndefined(inputValue) && !isNaN(inputValue as number)) {\n      const valueNumber =\n        (ref as HTMLInputElement).valueAsNumber ||\n        (inputValue ? +inputValue : inputValue);\n      if (!isNullOrUndefined(maxOutput.value)) {\n        exceedMax = valueNumber > maxOutput.value;\n      }\n      if (!isNullOrUndefined(minOutput.value)) {\n        exceedMin = valueNumber < minOutput.value;\n      }\n    } else {\n      const valueDate =\n        (ref as HTMLInputElement).valueAsDate || new Date(inputValue as string);\n      const convertTimeToDate = (time: unknown) =>\n        new Date(new Date().toDateString() + ' ' + time);\n      const isTime = ref.type == 'time';\n      const isWeek = ref.type == 'week';\n\n      if (isString(maxOutput.value) && inputValue) {\n        exceedMax = isTime\n          ? convertTimeToDate(inputValue) > convertTimeToDate(maxOutput.value)\n          : isWeek\n            ? inputValue > maxOutput.value\n            : valueDate > new Date(maxOutput.value);\n      }\n\n      if (isString(minOutput.value) && inputValue) {\n        exceedMin = isTime\n          ? convertTimeToDate(inputValue) < convertTimeToDate(minOutput.value)\n          : isWeek\n            ? inputValue < minOutput.value\n            : valueDate < new Date(minOutput.value);\n      }\n    }\n\n    if (exceedMax || exceedMin) {\n      getMinMaxMessage(\n        !!exceedMax,\n        maxOutput.message,\n        minOutput.message,\n        INPUT_VALIDATION_RULES.max,\n        INPUT_VALIDATION_RULES.min,\n      );\n      if (!validateAllFieldCriteria) {\n        setCustomValidity(error[name]!.message);\n        return error;\n      }\n    }\n  }\n\n  if (\n    (maxLength || minLength) &&\n    !isEmpty &&\n    (isString(inputValue) || (isFieldArray && Array.isArray(inputValue)))\n  ) {\n    const maxLengthOutput = getValueAndMessage(maxLength);\n    const minLengthOutput = getValueAndMessage(minLength);\n    const exceedMax =\n      !isNullOrUndefined(maxLengthOutput.value) &&\n      inputValue.length > +maxLengthOutput.value;\n    const exceedMin =\n      !isNullOrUndefined(minLengthOutput.value) &&\n      inputValue.length < +minLengthOutput.value;\n\n    if (exceedMax || exceedMin) {\n      getMinMaxMessage(\n        exceedMax,\n        maxLengthOutput.message,\n        minLengthOutput.message,\n      );\n      if (!validateAllFieldCriteria) {\n        setCustomValidity(error[name]!.message);\n        return error;\n      }\n    }\n  }\n\n  if (pattern && !isEmpty && isString(inputValue)) {\n    const { value: patternValue, message } = getValueAndMessage(pattern);\n\n    if (isRegex(patternValue) && !inputValue.match(patternValue)) {\n      error[name] = {\n        type: INPUT_VALIDATION_RULES.pattern,\n        message,\n        ref,\n        ...appendErrorsCurry(INPUT_VALIDATION_RULES.pattern, message),\n      };\n      if (!validateAllFieldCriteria) {\n        setCustomValidity(message);\n        return error;\n      }\n    }\n  }\n\n  if (validate) {\n    if (isFunction(validate)) {\n      const result = await validate(inputValue, formValues);\n      const validateError = getValidateError(result, inputRef);\n\n      if (validateError) {\n        error[name] = {\n          ...validateError,\n          ...appendErrorsCurry(\n            INPUT_VALIDATION_RULES.validate,\n            validateError.message,\n          ),\n        };\n        if (!validateAllFieldCriteria) {\n          setCustomValidity(validateError.message);\n          return error;\n        }\n      }\n    } else if (isObject(validate)) {\n      let validationResult = {} as FieldError;\n\n      for (const key in validate) {\n        if (!isEmptyObject(validationResult) && !validateAllFieldCriteria) {\n          break;\n        }\n\n        const validateError = getValidateError(\n          await validate[key](inputValue, formValues),\n          inputRef,\n          key,\n        );\n\n        if (validateError) {\n          validationResult = {\n            ...validateError,\n            ...appendErrorsCurry(key, validateError.message),\n          };\n\n          setCustomValidity(validateError.message);\n\n          if (validateAllFieldCriteria) {\n            error[name] = validationResult;\n          }\n        }\n      }\n\n      if (!isEmptyObject(validationResult)) {\n        error[name] = {\n          ref: inputRef,\n          ...validationResult,\n        };\n        if (!validateAllFieldCriteria) {\n          return error;\n        }\n      }\n    }\n  }\n\n  setCustomValidity(true);\n  return error;\n};\n","import { EVENTS, VALIDATION_MODE } from '../constants';\nimport {\n  BatchFieldArrayUpdate,\n  ChangeHandler,\n  Control,\n  DeepPartial,\n  DelayCallback,\n  EventType,\n  Field,\n  FieldError,\n  FieldErrors,\n  FieldNamesMarkedBoolean,\n  FieldPath,\n  FieldRefs,\n  FieldValues,\n  FormState,\n  FromSubscribe,\n  GetIsDirty,\n  InternalFieldName,\n  Names,\n  Path,\n  ReadFormState,\n  Ref,\n  SetFieldValue,\n  SetValueConfig,\n  Subjects,\n  UseFormClearErrors,\n  UseFormGetFieldState,\n  UseFormGetValues,\n  UseFormHandleSubmit,\n  UseFormProps,\n  UseFormRegister,\n  UseFormReset,\n  UseFormResetField,\n  UseFormReturn,\n  UseFormSetError,\n  UseFormSetFocus,\n  UseFormSetValue,\n  UseFormTrigger,\n  UseFormUnregister,\n  UseFormWatch,\n  UseFromSubscribe,\n  WatchInternal,\n  WatchObserver,\n} from '../types';\nimport cloneObject from '../utils/cloneObject';\nimport compact from '../utils/compact';\nimport convertToArrayPayload from '../utils/convertToArrayPayload';\nimport createSubject from '../utils/createSubject';\nimport deepEqual from '../utils/deepEqual';\nimport get from '../utils/get';\nimport isBoolean from '../utils/isBoolean';\nimport isCheckBoxInput from '../utils/isCheckBoxInput';\nimport isDateObject from '../utils/isDateObject';\nimport isEmptyObject from '../utils/isEmptyObject';\nimport isFileInput from '../utils/isFileInput';\nimport isFunction from '../utils/isFunction';\nimport isHTMLElement from '../utils/isHTMLElement';\nimport isMultipleSelect from '../utils/isMultipleSelect';\nimport isNullOrUndefined from '../utils/isNullOrUndefined';\nimport isObject from '../utils/isObject';\nimport isRadioOrCheckbox from '../utils/isRadioOrCheckbox';\nimport isString from '../utils/isString';\nimport isUndefined from '../utils/isUndefined';\nimport isWeb from '../utils/isWeb';\nimport live from '../utils/live';\nimport set from '../utils/set';\nimport unset from '../utils/unset';\n\nimport generateWatchOutput from './generateWatchOutput';\nimport getDirtyFields from './getDirtyFields';\nimport getEventValue from './getEventValue';\nimport getFieldValue from './getFieldValue';\nimport getFieldValueAs from './getFieldValueAs';\nimport getResolverOptions from './getResolverOptions';\nimport getRuleValue from './getRuleValue';\nimport getValidationModes from './getValidationModes';\nimport hasPromiseValidation from './hasPromiseValidation';\nimport hasValidation from './hasValidation';\nimport isNameInFieldArray from './isNameInFieldArray';\nimport isWatched from './isWatched';\nimport iterateFieldsByAction from './iterateFieldsByAction';\nimport schemaErrorLookup from './schemaErrorLookup';\nimport shouldRenderFormState from './shouldRenderFormState';\nimport shouldSubscribeByName from './shouldSubscribeByName';\nimport skipValidation from './skipValidation';\nimport unsetEmptyArray from './unsetEmptyArray';\nimport updateFieldArrayRootError from './updateFieldArrayRootError';\nimport validateField from './validateField';\n\nconst defaultOptions = {\n  mode: VALIDATION_MODE.onSubmit,\n  reValidateMode: VALIDATION_MODE.onChange,\n  shouldFocusError: true,\n} as const;\n\nexport function createFormControl<\n  TFieldValues extends FieldValues = FieldValues,\n  TContext = any,\n  TTransformedValues = TFieldValues,\n>(\n  props: UseFormProps<TFieldValues, TContext, TTransformedValues> = {},\n): Omit<\n  UseFormReturn<TFieldValues, TContext, TTransformedValues>,\n  'formState'\n> & {\n  formControl: Omit<\n    UseFormReturn<TFieldValues, TContext, TTransformedValues>,\n    'formState'\n  >;\n} {\n  let _options = {\n    ...defaultOptions,\n    ...props,\n  };\n  let _formState: FormState<TFieldValues> = {\n    submitCount: 0,\n    isDirty: false,\n    isLoading: isFunction(_options.defaultValues),\n    isValidating: false,\n    isSubmitted: false,\n    isSubmitting: false,\n    isSubmitSuccessful: false,\n    isValid: false,\n    touchedFields: {},\n    dirtyFields: {},\n    validatingFields: {},\n    errors: _options.errors || {},\n    disabled: _options.disabled || false,\n  };\n  const _fields: FieldRefs = {};\n  let _defaultValues =\n    isObject(_options.defaultValues) || isObject(_options.values)\n      ? cloneObject(_options.values || _options.defaultValues) || {}\n      : {};\n  let _formValues = _options.shouldUnregister\n    ? ({} as TFieldValues)\n    : (cloneObject(_defaultValues) as TFieldValues);\n  let _state = {\n    action: false,\n    mount: false,\n    watch: false,\n  };\n  let _names: Names = {\n    mount: new Set(),\n    disabled: new Set(),\n    unMount: new Set(),\n    array: new Set(),\n    watch: new Set(),\n  };\n  let delayErrorCallback: DelayCallback | null;\n  let timer = 0;\n  const _proxyFormState: ReadFormState = {\n    isDirty: false,\n    dirtyFields: false,\n    validatingFields: false,\n    touchedFields: false,\n    isValidating: false,\n    isValid: false,\n    errors: false,\n  };\n  let _proxySubscribeFormState = {\n    ..._proxyFormState,\n  };\n  const _subjects: Subjects<TFieldValues> = {\n    array: createSubject(),\n    state: createSubject(),\n  };\n  const validationModeBeforeSubmit = getValidationModes(_options.mode);\n  const validationModeAfterSubmit = getValidationModes(_options.reValidateMode);\n  const shouldDisplayAllAssociatedErrors =\n    _options.criteriaMode === VALIDATION_MODE.all;\n\n  const debounce =\n    <T extends Function>(callback: T) =>\n    (wait: number) => {\n      clearTimeout(timer);\n      timer = setTimeout(callback, wait);\n    };\n\n  const _setValid = async (shouldUpdateValid?: boolean) => {\n    if (\n      !_options.disabled &&\n      (_proxyFormState.isValid ||\n        _proxySubscribeFormState.isValid ||\n        shouldUpdateValid)\n    ) {\n      const isValid = _options.resolver\n        ? isEmptyObject((await _runSchema()).errors)\n        : await executeBuiltInValidation(_fields, true);\n\n      if (isValid !== _formState.isValid) {\n        _subjects.state.next({\n          isValid,\n        });\n      }\n    }\n  };\n\n  const _updateIsValidating = (names?: string[], isValidating?: boolean) => {\n    if (\n      !_options.disabled &&\n      (_proxyFormState.isValidating ||\n        _proxyFormState.validatingFields ||\n        _proxySubscribeFormState.isValidating ||\n        _proxySubscribeFormState.validatingFields)\n    ) {\n      (names || Array.from(_names.mount)).forEach((name) => {\n        if (name) {\n          isValidating\n            ? set(_formState.validatingFields, name, isValidating)\n            : unset(_formState.validatingFields, name);\n        }\n      });\n\n      _subjects.state.next({\n        validatingFields: _formState.validatingFields,\n        isValidating: !isEmptyObject(_formState.validatingFields),\n      });\n    }\n  };\n\n  const _setFieldArray: BatchFieldArrayUpdate = (\n    name,\n    values = [],\n    method,\n    args,\n    shouldSetValues = true,\n    shouldUpdateFieldsAndState = true,\n  ) => {\n    if (args && method && !_options.disabled) {\n      _state.action = true;\n      if (shouldUpdateFieldsAndState && Array.isArray(get(_fields, name))) {\n        const fieldValues = method(get(_fields, name), args.argA, args.argB);\n        shouldSetValues && set(_fields, name, fieldValues);\n      }\n\n      if (\n        shouldUpdateFieldsAndState &&\n        Array.isArray(get(_formState.errors, name))\n      ) {\n        const errors = method(\n          get(_formState.errors, name),\n          args.argA,\n          args.argB,\n        );\n        shouldSetValues && set(_formState.errors, name, errors);\n        unsetEmptyArray(_formState.errors, name);\n      }\n\n      if (\n        (_proxyFormState.touchedFields ||\n          _proxySubscribeFormState.touchedFields) &&\n        shouldUpdateFieldsAndState &&\n        Array.isArray(get(_formState.touchedFields, name))\n      ) {\n        const touchedFields = method(\n          get(_formState.touchedFields, name),\n          args.argA,\n          args.argB,\n        );\n        shouldSetValues && set(_formState.touchedFields, name, touchedFields);\n      }\n\n      if (_proxyFormState.dirtyFields || _proxySubscribeFormState.dirtyFields) {\n        _formState.dirtyFields = getDirtyFields(_defaultValues, _formValues);\n      }\n\n      _subjects.state.next({\n        name,\n        isDirty: _getDirty(name, values),\n        dirtyFields: _formState.dirtyFields,\n        errors: _formState.errors,\n        isValid: _formState.isValid,\n      });\n    } else {\n      set(_formValues, name, values);\n    }\n  };\n\n  const updateErrors = (name: InternalFieldName, error: FieldError) => {\n    set(_formState.errors, name, error);\n    _subjects.state.next({\n      errors: _formState.errors,\n    });\n  };\n\n  const _setErrors = (errors: FieldErrors<TFieldValues>) => {\n    _formState.errors = errors;\n    _subjects.state.next({\n      errors: _formState.errors,\n      isValid: false,\n    });\n  };\n\n  const updateValidAndValue = (\n    name: InternalFieldName,\n    shouldSkipSetValueAs: boolean,\n    value?: unknown,\n    ref?: Ref,\n  ) => {\n    const field: Field = get(_fields, name);\n\n    if (field) {\n      const defaultValue = get(\n        _formValues,\n        name,\n        isUndefined(value) ? get(_defaultValues, name) : value,\n      );\n\n      isUndefined(defaultValue) ||\n      (ref && (ref as HTMLInputElement).defaultChecked) ||\n      shouldSkipSetValueAs\n        ? set(\n            _formValues,\n            name,\n            shouldSkipSetValueAs ? defaultValue : getFieldValue(field._f),\n          )\n        : setFieldValue(name, defaultValue);\n\n      _state.mount && _setValid();\n    }\n  };\n\n  const updateTouchAndDirty = (\n    name: InternalFieldName,\n    fieldValue: unknown,\n    isBlurEvent?: boolean,\n    shouldDirty?: boolean,\n    shouldRender?: boolean,\n  ): Partial<\n    Pick<FormState<TFieldValues>, 'dirtyFields' | 'isDirty' | 'touchedFields'>\n  > => {\n    let shouldUpdateField = false;\n    let isPreviousDirty = false;\n    const output: Partial<FormState<TFieldValues>> & { name: string } = {\n      name,\n    };\n\n    if (!_options.disabled) {\n      if (!isBlurEvent || shouldDirty) {\n        if (_proxyFormState.isDirty || _proxySubscribeFormState.isDirty) {\n          isPreviousDirty = _formState.isDirty;\n          _formState.isDirty = output.isDirty = _getDirty();\n          shouldUpdateField = isPreviousDirty !== output.isDirty;\n        }\n\n        const isCurrentFieldPristine = deepEqual(\n          get(_defaultValues, name),\n          fieldValue,\n        );\n\n        isPreviousDirty = !!get(_formState.dirtyFields, name);\n        isCurrentFieldPristine\n          ? unset(_formState.dirtyFields, name)\n          : set(_formState.dirtyFields, name, true);\n        output.dirtyFields = _formState.dirtyFields;\n        shouldUpdateField =\n          shouldUpdateField ||\n          ((_proxyFormState.dirtyFields ||\n            _proxySubscribeFormState.dirtyFields) &&\n            isPreviousDirty !== !isCurrentFieldPristine);\n      }\n\n      if (isBlurEvent) {\n        const isPreviousFieldTouched = get(_formState.touchedFields, name);\n\n        if (!isPreviousFieldTouched) {\n          set(_formState.touchedFields, name, isBlurEvent);\n          output.touchedFields = _formState.touchedFields;\n          shouldUpdateField =\n            shouldUpdateField ||\n            ((_proxyFormState.touchedFields ||\n              _proxySubscribeFormState.touchedFields) &&\n              isPreviousFieldTouched !== isBlurEvent);\n        }\n      }\n\n      shouldUpdateField && shouldRender && _subjects.state.next(output);\n    }\n\n    return shouldUpdateField ? output : {};\n  };\n\n  const shouldRenderByError = (\n    name: InternalFieldName,\n    isValid?: boolean,\n    error?: FieldError,\n    fieldState?: {\n      dirty?: FieldNamesMarkedBoolean<TFieldValues>;\n      isDirty?: boolean;\n      touched?: FieldNamesMarkedBoolean<TFieldValues>;\n    },\n  ) => {\n    const previousFieldError = get(_formState.errors, name);\n    const shouldUpdateValid =\n      (_proxyFormState.isValid || _proxySubscribeFormState.isValid) &&\n      isBoolean(isValid) &&\n      _formState.isValid !== isValid;\n\n    if (_options.delayError && error) {\n      delayErrorCallback = debounce(() => updateErrors(name, error));\n      delayErrorCallback(_options.delayError);\n    } else {\n      clearTimeout(timer);\n      delayErrorCallback = null;\n      error\n        ? set(_formState.errors, name, error)\n        : unset(_formState.errors, name);\n    }\n\n    if (\n      (error ? !deepEqual(previousFieldError, error) : previousFieldError) ||\n      !isEmptyObject(fieldState) ||\n      shouldUpdateValid\n    ) {\n      const updatedFormState = {\n        ...fieldState,\n        ...(shouldUpdateValid && isBoolean(isValid) ? { isValid } : {}),\n        errors: _formState.errors,\n        name,\n      };\n\n      _formState = {\n        ..._formState,\n        ...updatedFormState,\n      };\n\n      _subjects.state.next(updatedFormState);\n    }\n  };\n\n  const _runSchema = async (name?: InternalFieldName[]) => {\n    _updateIsValidating(name, true);\n    const result = await _options.resolver!(\n      _formValues as TFieldValues,\n      _options.context,\n      getResolverOptions(\n        name || _names.mount,\n        _fields,\n        _options.criteriaMode,\n        _options.shouldUseNativeValidation,\n      ),\n    );\n    _updateIsValidating(name);\n    return result;\n  };\n\n  const executeSchemaAndUpdateState = async (names?: InternalFieldName[]) => {\n    const { errors } = await _runSchema(names);\n\n    if (names) {\n      for (const name of names) {\n        const error = get(errors, name);\n        error\n          ? set(_formState.errors, name, error)\n          : unset(_formState.errors, name);\n      }\n    } else {\n      _formState.errors = errors;\n    }\n\n    return errors;\n  };\n\n  const executeBuiltInValidation = async (\n    fields: FieldRefs,\n    shouldOnlyCheckValid?: boolean,\n    context: {\n      valid: boolean;\n    } = {\n      valid: true,\n    },\n  ) => {\n    for (const name in fields) {\n      const field = fields[name];\n\n      if (field) {\n        const { _f, ...fieldValue } = field as Field;\n\n        if (_f) {\n          const isFieldArrayRoot = _names.array.has(_f.name);\n          const isPromiseFunction =\n            field._f && hasPromiseValidation((field as Field)._f);\n\n          if (isPromiseFunction && _proxyFormState.validatingFields) {\n            _updateIsValidating([name], true);\n          }\n\n          const fieldError = await validateField(\n            field as Field,\n            _names.disabled,\n            _formValues,\n            shouldDisplayAllAssociatedErrors,\n            _options.shouldUseNativeValidation && !shouldOnlyCheckValid,\n            isFieldArrayRoot,\n          );\n\n          if (isPromiseFunction && _proxyFormState.validatingFields) {\n            _updateIsValidating([name]);\n          }\n\n          if (fieldError[_f.name]) {\n            context.valid = false;\n            if (shouldOnlyCheckValid) {\n              break;\n            }\n          }\n\n          !shouldOnlyCheckValid &&\n            (get(fieldError, _f.name)\n              ? isFieldArrayRoot\n                ? updateFieldArrayRootError(\n                    _formState.errors,\n                    fieldError,\n                    _f.name,\n                  )\n                : set(_formState.errors, _f.name, fieldError[_f.name])\n              : unset(_formState.errors, _f.name));\n        }\n\n        !isEmptyObject(fieldValue) &&\n          (await executeBuiltInValidation(\n            fieldValue,\n            shouldOnlyCheckValid,\n            context,\n          ));\n      }\n    }\n\n    return context.valid;\n  };\n\n  const _removeUnmounted = () => {\n    for (const name of _names.unMount) {\n      const field: Field = get(_fields, name);\n\n      field &&\n        (field._f.refs\n          ? field._f.refs.every((ref) => !live(ref))\n          : !live(field._f.ref)) &&\n        unregister(name as FieldPath<TFieldValues>);\n    }\n\n    _names.unMount = new Set();\n  };\n\n  const _getDirty: GetIsDirty = (name, data) =>\n    !_options.disabled &&\n    (name && data && set(_formValues, name, data),\n    !deepEqual(getValues(), _defaultValues));\n\n  const _getWatch: WatchInternal<TFieldValues> = (\n    names,\n    defaultValue,\n    isGlobal,\n  ) =>\n    generateWatchOutput(\n      names,\n      _names,\n      {\n        ...(_state.mount\n          ? _formValues\n          : isUndefined(defaultValue)\n            ? _defaultValues\n            : isString(names)\n              ? { [names]: defaultValue }\n              : defaultValue),\n      },\n      isGlobal,\n      defaultValue,\n    );\n\n  const _getFieldArray = <TFieldArrayValues>(\n    name: InternalFieldName,\n  ): Partial<TFieldArrayValues>[] =>\n    compact(\n      get(\n        _state.mount ? _formValues : _defaultValues,\n        name,\n        _options.shouldUnregister ? get(_defaultValues, name, []) : [],\n      ),\n    );\n\n  const setFieldValue = (\n    name: InternalFieldName,\n    value: SetFieldValue<TFieldValues>,\n    options: SetValueConfig = {},\n  ) => {\n    const field: Field = get(_fields, name);\n    let fieldValue: unknown = value;\n\n    if (field) {\n      const fieldReference = field._f;\n\n      if (fieldReference) {\n        !fieldReference.disabled &&\n          set(_formValues, name, getFieldValueAs(value, fieldReference));\n\n        fieldValue =\n          isHTMLElement(fieldReference.ref) && isNullOrUndefined(value)\n            ? ''\n            : value;\n\n        if (isMultipleSelect(fieldReference.ref)) {\n          [...fieldReference.ref.options].forEach(\n            (optionRef) =>\n              (optionRef.selected = (\n                fieldValue as InternalFieldName[]\n              ).includes(optionRef.value)),\n          );\n        } else if (fieldReference.refs) {\n          if (isCheckBoxInput(fieldReference.ref)) {\n            fieldReference.refs.length > 1\n              ? fieldReference.refs.forEach(\n                  (checkboxRef) =>\n                    (!checkboxRef.defaultChecked || !checkboxRef.disabled) &&\n                    (checkboxRef.checked = Array.isArray(fieldValue)\n                      ? !!(fieldValue as []).find(\n                          (data: string) => data === checkboxRef.value,\n                        )\n                      : fieldValue === checkboxRef.value),\n                )\n              : fieldReference.refs[0] &&\n                (fieldReference.refs[0].checked = !!fieldValue);\n          } else {\n            fieldReference.refs.forEach(\n              (radioRef: HTMLInputElement) =>\n                (radioRef.checked = radioRef.value === fieldValue),\n            );\n          }\n        } else if (isFileInput(fieldReference.ref)) {\n          fieldReference.ref.value = '';\n        } else {\n          fieldReference.ref.value = fieldValue;\n\n          if (!fieldReference.ref.type) {\n            _subjects.state.next({\n              name,\n              values: cloneObject(_formValues),\n            });\n          }\n        }\n      }\n    }\n\n    (options.shouldDirty || options.shouldTouch) &&\n      updateTouchAndDirty(\n        name,\n        fieldValue,\n        options.shouldTouch,\n        options.shouldDirty,\n        true,\n      );\n\n    options.shouldValidate && trigger(name as Path<TFieldValues>);\n  };\n\n  const setValues = <\n    T extends InternalFieldName,\n    K extends SetFieldValue<TFieldValues>,\n    U extends SetValueConfig,\n  >(\n    name: T,\n    value: K,\n    options: U,\n  ) => {\n    for (const fieldKey in value) {\n      const fieldValue = value[fieldKey];\n      const fieldName = `${name}.${fieldKey}`;\n      const field = get(_fields, fieldName);\n\n      (_names.array.has(name) ||\n        isObject(fieldValue) ||\n        (field && !field._f)) &&\n      !isDateObject(fieldValue)\n        ? setValues(fieldName, fieldValue, options)\n        : setFieldValue(fieldName, fieldValue, options);\n    }\n  };\n\n  const setValue: UseFormSetValue<TFieldValues> = (\n    name,\n    value,\n    options = {},\n  ) => {\n    const field = get(_fields, name);\n    const isFieldArray = _names.array.has(name);\n    const cloneValue = cloneObject(value);\n\n    set(_formValues, name, cloneValue);\n\n    if (isFieldArray) {\n      _subjects.array.next({\n        name,\n        values: cloneObject(_formValues),\n      });\n\n      if (\n        (_proxyFormState.isDirty ||\n          _proxyFormState.dirtyFields ||\n          _proxySubscribeFormState.isDirty ||\n          _proxySubscribeFormState.dirtyFields) &&\n        options.shouldDirty\n      ) {\n        _subjects.state.next({\n          name,\n          dirtyFields: getDirtyFields(_defaultValues, _formValues),\n          isDirty: _getDirty(name, cloneValue),\n        });\n      }\n    } else {\n      field && !field._f && !isNullOrUndefined(cloneValue)\n        ? setValues(name, cloneValue, options)\n        : setFieldValue(name, cloneValue, options);\n    }\n\n    isWatched(name, _names) && _subjects.state.next({ ..._formState });\n    _subjects.state.next({\n      name: _state.mount ? name : undefined,\n      values: cloneObject(_formValues),\n    });\n  };\n\n  const onChange: ChangeHandler = async (event) => {\n    _state.mount = true;\n    const target = event.target;\n    let name: string = target.name;\n    let isFieldValueUpdated = true;\n    const field: Field = get(_fields, name);\n    const _updateIsFieldValueUpdated = (fieldValue: unknown) => {\n      isFieldValueUpdated =\n        Number.isNaN(fieldValue) ||\n        (isDateObject(fieldValue) && isNaN(fieldValue.getTime())) ||\n        deepEqual(fieldValue, get(_formValues, name, fieldValue));\n    };\n\n    if (field) {\n      let error;\n      let isValid;\n      const fieldValue = target.type\n        ? getFieldValue(field._f)\n        : getEventValue(event);\n      const isBlurEvent =\n        event.type === EVENTS.BLUR || event.type === EVENTS.FOCUS_OUT;\n      const shouldSkipValidation =\n        (!hasValidation(field._f) &&\n          !_options.resolver &&\n          !get(_formState.errors, name) &&\n          !field._f.deps) ||\n        skipValidation(\n          isBlurEvent,\n          get(_formState.touchedFields, name),\n          _formState.isSubmitted,\n          validationModeAfterSubmit,\n          validationModeBeforeSubmit,\n        );\n      const watched = isWatched(name, _names, isBlurEvent);\n\n      set(_formValues, name, fieldValue);\n\n      if (isBlurEvent) {\n        field._f.onBlur && field._f.onBlur(event);\n        delayErrorCallback && delayErrorCallback(0);\n      } else if (field._f.onChange) {\n        field._f.onChange(event);\n      }\n\n      const fieldState = updateTouchAndDirty(name, fieldValue, isBlurEvent);\n\n      const shouldRender = !isEmptyObject(fieldState) || watched;\n\n      !isBlurEvent &&\n        _subjects.state.next({\n          name,\n          type: event.type,\n          values: cloneObject(_formValues),\n        });\n\n      if (shouldSkipValidation) {\n        if (_proxyFormState.isValid || _proxySubscribeFormState.isValid) {\n          if (_options.mode === 'onBlur') {\n            if (isBlurEvent) {\n              _setValid();\n            }\n          } else if (!isBlurEvent) {\n            _setValid();\n          }\n        }\n\n        return (\n          shouldRender &&\n          _subjects.state.next({ name, ...(watched ? {} : fieldState) })\n        );\n      }\n\n      !isBlurEvent && watched && _subjects.state.next({ ..._formState });\n\n      if (_options.resolver) {\n        const { errors } = await _runSchema([name]);\n\n        _updateIsFieldValueUpdated(fieldValue);\n\n        if (isFieldValueUpdated) {\n          const previousErrorLookupResult = schemaErrorLookup(\n            _formState.errors,\n            _fields,\n            name,\n          );\n          const errorLookupResult = schemaErrorLookup(\n            errors,\n            _fields,\n            previousErrorLookupResult.name || name,\n          );\n\n          error = errorLookupResult.error;\n          name = errorLookupResult.name;\n\n          isValid = isEmptyObject(errors);\n        }\n      } else {\n        _updateIsValidating([name], true);\n        error = (\n          await validateField(\n            field,\n            _names.disabled,\n            _formValues,\n            shouldDisplayAllAssociatedErrors,\n            _options.shouldUseNativeValidation,\n          )\n        )[name];\n        _updateIsValidating([name]);\n\n        _updateIsFieldValueUpdated(fieldValue);\n\n        if (isFieldValueUpdated) {\n          if (error) {\n            isValid = false;\n          } else if (\n            _proxyFormState.isValid ||\n            _proxySubscribeFormState.isValid\n          ) {\n            isValid = await executeBuiltInValidation(_fields, true);\n          }\n        }\n      }\n\n      if (isFieldValueUpdated) {\n        field._f.deps &&\n          trigger(\n            field._f.deps as\n              | FieldPath<TFieldValues>\n              | FieldPath<TFieldValues>[],\n          );\n        shouldRenderByError(name, isValid, error, fieldState);\n      }\n    }\n  };\n\n  const _focusInput = (ref: Ref, key: string) => {\n    if (get(_formState.errors, key) && ref.focus) {\n      ref.focus();\n      return 1;\n    }\n    return;\n  };\n\n  const trigger: UseFormTrigger<TFieldValues> = async (name, options = {}) => {\n    let isValid;\n    let validationResult;\n    const fieldNames = convertToArrayPayload(name) as InternalFieldName[];\n\n    if (_options.resolver) {\n      const errors = await executeSchemaAndUpdateState(\n        isUndefined(name) ? name : fieldNames,\n      );\n\n      isValid = isEmptyObject(errors);\n      validationResult = name\n        ? !fieldNames.some((name) => get(errors, name))\n        : isValid;\n    } else if (name) {\n      validationResult = (\n        await Promise.all(\n          fieldNames.map(async (fieldName) => {\n            const field = get(_fields, fieldName);\n            return await executeBuiltInValidation(\n              field && field._f ? { [fieldName]: field } : field,\n            );\n          }),\n        )\n      ).every(Boolean);\n      !(!validationResult && !_formState.isValid) && _setValid();\n    } else {\n      validationResult = isValid = await executeBuiltInValidation(_fields);\n    }\n\n    _subjects.state.next({\n      ...(!isString(name) ||\n      ((_proxyFormState.isValid || _proxySubscribeFormState.isValid) &&\n        isValid !== _formState.isValid)\n        ? {}\n        : { name }),\n      ...(_options.resolver || !name ? { isValid } : {}),\n      errors: _formState.errors,\n    });\n\n    options.shouldFocus &&\n      !validationResult &&\n      iterateFieldsByAction(\n        _fields,\n        _focusInput,\n        name ? fieldNames : _names.mount,\n      );\n\n    return validationResult;\n  };\n\n  const getValues: UseFormGetValues<TFieldValues> = (\n    fieldNames?:\n      | FieldPath<TFieldValues>\n      | ReadonlyArray<FieldPath<TFieldValues>>,\n  ) => {\n    const values = {\n      ...(_state.mount ? _formValues : _defaultValues),\n    };\n\n    return isUndefined(fieldNames)\n      ? values\n      : isString(fieldNames)\n        ? get(values, fieldNames)\n        : fieldNames.map((name) => get(values, name));\n  };\n\n  const getFieldState: UseFormGetFieldState<TFieldValues> = (\n    name,\n    formState,\n  ) => ({\n    invalid: !!get((formState || _formState).errors, name),\n    isDirty: !!get((formState || _formState).dirtyFields, name),\n    error: get((formState || _formState).errors, name),\n    isValidating: !!get(_formState.validatingFields, name),\n    isTouched: !!get((formState || _formState).touchedFields, name),\n  });\n\n  const clearErrors: UseFormClearErrors<TFieldValues> = (name) => {\n    name &&\n      convertToArrayPayload(name).forEach((inputName) =>\n        unset(_formState.errors, inputName),\n      );\n\n    _subjects.state.next({\n      errors: name ? _formState.errors : {},\n    });\n  };\n\n  const setError: UseFormSetError<TFieldValues> = (name, error, options) => {\n    const ref = (get(_fields, name, { _f: {} })._f || {}).ref;\n    const currentError = get(_formState.errors, name) || {};\n\n    // Don't override existing error messages elsewhere in the object tree.\n    const { ref: currentRef, message, type, ...restOfErrorTree } = currentError;\n\n    set(_formState.errors, name, {\n      ...restOfErrorTree,\n      ...error,\n      ref,\n    });\n\n    _subjects.state.next({\n      name,\n      errors: _formState.errors,\n      isValid: false,\n    });\n\n    options && options.shouldFocus && ref && ref.focus && ref.focus();\n  };\n\n  const watch: UseFormWatch<TFieldValues> = (\n    name?:\n      | FieldPath<TFieldValues>\n      | ReadonlyArray<FieldPath<TFieldValues>>\n      | WatchObserver<TFieldValues>,\n    defaultValue?: DeepPartial<TFieldValues>,\n  ) =>\n    isFunction(name)\n      ? _subjects.state.subscribe({\n          next: (payload) =>\n            name(\n              _getWatch(undefined, defaultValue),\n              payload as {\n                name?: FieldPath<TFieldValues>;\n                type?: EventType;\n                value?: unknown;\n              },\n            ),\n        })\n      : _getWatch(\n          name as InternalFieldName | InternalFieldName[],\n          defaultValue,\n          true,\n        );\n\n  const _subscribe: FromSubscribe<TFieldValues> = (props) =>\n    _subjects.state.subscribe({\n      next: (\n        formState: Partial<FormState<TFieldValues>> & {\n          name?: InternalFieldName;\n          values?: TFieldValues | undefined;\n        },\n      ) => {\n        if (\n          shouldSubscribeByName(props.name, formState.name, props.exact) &&\n          shouldRenderFormState(\n            formState,\n            (props.formState as ReadFormState) || _proxyFormState,\n            _setFormState,\n            props.reRenderRoot,\n          )\n        ) {\n          props.callback({\n            values: { ..._formValues } as TFieldValues,\n            ..._formState,\n            ...formState,\n          });\n        }\n      },\n    }).unsubscribe;\n\n  const subscribe: UseFromSubscribe<TFieldValues> = (props) => {\n    _state.mount = true;\n    _proxySubscribeFormState = {\n      ..._proxySubscribeFormState,\n      ...props.formState,\n    };\n    return _subscribe({\n      ...props,\n      formState: _proxySubscribeFormState,\n    });\n  };\n\n  const unregister: UseFormUnregister<TFieldValues> = (name, options = {}) => {\n    for (const fieldName of name ? convertToArrayPayload(name) : _names.mount) {\n      _names.mount.delete(fieldName);\n      _names.array.delete(fieldName);\n\n      if (!options.keepValue) {\n        unset(_fields, fieldName);\n        unset(_formValues, fieldName);\n      }\n\n      !options.keepError && unset(_formState.errors, fieldName);\n      !options.keepDirty && unset(_formState.dirtyFields, fieldName);\n      !options.keepTouched && unset(_formState.touchedFields, fieldName);\n      !options.keepIsValidating &&\n        unset(_formState.validatingFields, fieldName);\n      !_options.shouldUnregister &&\n        !options.keepDefaultValue &&\n        unset(_defaultValues, fieldName);\n    }\n\n    _subjects.state.next({\n      values: cloneObject(_formValues),\n    });\n\n    _subjects.state.next({\n      ..._formState,\n      ...(!options.keepDirty ? {} : { isDirty: _getDirty() }),\n    });\n\n    !options.keepIsValid && _setValid();\n  };\n\n  const _setDisabledField: Control<TFieldValues>['_setDisabledField'] = ({\n    disabled,\n    name,\n  }) => {\n    if (\n      (isBoolean(disabled) && _state.mount) ||\n      !!disabled ||\n      _names.disabled.has(name)\n    ) {\n      disabled ? _names.disabled.add(name) : _names.disabled.delete(name);\n    }\n  };\n\n  const register: UseFormRegister<TFieldValues> = (name, options = {}) => {\n    let field = get(_fields, name);\n    const disabledIsDefined =\n      isBoolean(options.disabled) || isBoolean(_options.disabled);\n\n    set(_fields, name, {\n      ...(field || {}),\n      _f: {\n        ...(field && field._f ? field._f : { ref: { name } }),\n        name,\n        mount: true,\n        ...options,\n      },\n    });\n    _names.mount.add(name);\n\n    if (field) {\n      _setDisabledField({\n        disabled: isBoolean(options.disabled)\n          ? options.disabled\n          : _options.disabled,\n        name,\n      });\n    } else {\n      updateValidAndValue(name, true, options.value);\n    }\n\n    return {\n      ...(disabledIsDefined\n        ? { disabled: options.disabled || _options.disabled }\n        : {}),\n      ...(_options.progressive\n        ? {\n            required: !!options.required,\n            min: getRuleValue(options.min),\n            max: getRuleValue(options.max),\n            minLength: getRuleValue<number>(options.minLength) as number,\n            maxLength: getRuleValue(options.maxLength) as number,\n            pattern: getRuleValue(options.pattern) as string,\n          }\n        : {}),\n      name,\n      onChange,\n      onBlur: onChange,\n      ref: (ref: HTMLInputElement | null): void => {\n        if (ref) {\n          register(name, options);\n          field = get(_fields, name);\n\n          const fieldRef = isUndefined(ref.value)\n            ? ref.querySelectorAll\n              ? (ref.querySelectorAll('input,select,textarea')[0] as Ref) || ref\n              : ref\n            : ref;\n          const radioOrCheckbox = isRadioOrCheckbox(fieldRef);\n          const refs = field._f.refs || [];\n\n          if (\n            radioOrCheckbox\n              ? refs.find((option: Ref) => option === fieldRef)\n              : fieldRef === field._f.ref\n          ) {\n            return;\n          }\n\n          set(_fields, name, {\n            _f: {\n              ...field._f,\n              ...(radioOrCheckbox\n                ? {\n                    refs: [\n                      ...refs.filter(live),\n                      fieldRef,\n                      ...(Array.isArray(get(_defaultValues, name)) ? [{}] : []),\n                    ],\n                    ref: { type: fieldRef.type, name },\n                  }\n                : { ref: fieldRef }),\n            },\n          });\n\n          updateValidAndValue(name, false, undefined, fieldRef);\n        } else {\n          field = get(_fields, name, {});\n\n          if (field._f) {\n            field._f.mount = false;\n          }\n\n          (_options.shouldUnregister || options.shouldUnregister) &&\n            !(isNameInFieldArray(_names.array, name) && _state.action) &&\n            _names.unMount.add(name);\n        }\n      },\n    };\n  };\n\n  const _focusError = () =>\n    _options.shouldFocusError &&\n    iterateFieldsByAction(_fields, _focusInput, _names.mount);\n\n  const _disableForm = (disabled?: boolean) => {\n    if (isBoolean(disabled)) {\n      _subjects.state.next({ disabled });\n      iterateFieldsByAction(\n        _fields,\n        (ref, name) => {\n          const currentField: Field = get(_fields, name);\n          if (currentField) {\n            ref.disabled = currentField._f.disabled || disabled;\n\n            if (Array.isArray(currentField._f.refs)) {\n              currentField._f.refs.forEach((inputRef) => {\n                inputRef.disabled = currentField._f.disabled || disabled;\n              });\n            }\n          }\n        },\n        0,\n        false,\n      );\n    }\n  };\n\n  const handleSubmit: UseFormHandleSubmit<TFieldValues, TTransformedValues> =\n    (onValid, onInvalid) => async (e) => {\n      let onValidError = undefined;\n      if (e) {\n        e.preventDefault && e.preventDefault();\n        (e as React.BaseSyntheticEvent).persist &&\n          (e as React.BaseSyntheticEvent).persist();\n      }\n      let fieldValues: TFieldValues | TTransformedValues | {} =\n        cloneObject(_formValues);\n\n      _subjects.state.next({\n        isSubmitting: true,\n      });\n\n      if (_options.resolver) {\n        const { errors, values } = await _runSchema();\n        _formState.errors = errors;\n        fieldValues = values as TFieldValues;\n      } else {\n        await executeBuiltInValidation(_fields);\n      }\n\n      if (_names.disabled.size) {\n        for (const name of _names.disabled) {\n          set(fieldValues, name, undefined);\n        }\n      }\n\n      unset(_formState.errors, 'root');\n\n      if (isEmptyObject(_formState.errors)) {\n        _subjects.state.next({\n          errors: {},\n        });\n        try {\n          await onValid(fieldValues as TTransformedValues, e);\n        } catch (error) {\n          onValidError = error;\n        }\n      } else {\n        if (onInvalid) {\n          await onInvalid({ ..._formState.errors }, e);\n        }\n        _focusError();\n        setTimeout(_focusError);\n      }\n\n      _subjects.state.next({\n        isSubmitted: true,\n        isSubmitting: false,\n        isSubmitSuccessful: isEmptyObject(_formState.errors) && !onValidError,\n        submitCount: _formState.submitCount + 1,\n        errors: _formState.errors,\n      });\n      if (onValidError) {\n        throw onValidError;\n      }\n    };\n\n  const resetField: UseFormResetField<TFieldValues> = (name, options = {}) => {\n    if (get(_fields, name)) {\n      if (isUndefined(options.defaultValue)) {\n        setValue(name, cloneObject(get(_defaultValues, name)));\n      } else {\n        setValue(\n          name,\n          options.defaultValue as Parameters<typeof setValue<typeof name>>[1],\n        );\n        set(_defaultValues, name, cloneObject(options.defaultValue));\n      }\n\n      if (!options.keepTouched) {\n        unset(_formState.touchedFields, name);\n      }\n\n      if (!options.keepDirty) {\n        unset(_formState.dirtyFields, name);\n        _formState.isDirty = options.defaultValue\n          ? _getDirty(name, cloneObject(get(_defaultValues, name)))\n          : _getDirty();\n      }\n\n      if (!options.keepError) {\n        unset(_formState.errors, name);\n        _proxyFormState.isValid && _setValid();\n      }\n\n      _subjects.state.next({ ..._formState });\n    }\n  };\n\n  const _reset: UseFormReset<TFieldValues> = (\n    formValues,\n    keepStateOptions = {},\n  ) => {\n    const updatedValues = formValues ? cloneObject(formValues) : _defaultValues;\n    const cloneUpdatedValues = cloneObject(updatedValues);\n    const isEmptyResetValues = isEmptyObject(formValues);\n    const values = isEmptyResetValues ? _defaultValues : cloneUpdatedValues;\n\n    if (!keepStateOptions.keepDefaultValues) {\n      _defaultValues = updatedValues;\n    }\n\n    if (!keepStateOptions.keepValues) {\n      if (keepStateOptions.keepDirtyValues) {\n        const fieldsToCheck = new Set([\n          ..._names.mount,\n          ...Object.keys(getDirtyFields(_defaultValues, _formValues)),\n        ]);\n        for (const fieldName of Array.from(fieldsToCheck)) {\n          get(_formState.dirtyFields, fieldName)\n            ? set(values, fieldName, get(_formValues, fieldName))\n            : setValue(\n                fieldName as FieldPath<TFieldValues>,\n                get(values, fieldName),\n              );\n        }\n      } else {\n        if (isWeb && isUndefined(formValues)) {\n          for (const name of _names.mount) {\n            const field = get(_fields, name);\n            if (field && field._f) {\n              const fieldReference = Array.isArray(field._f.refs)\n                ? field._f.refs[0]\n                : field._f.ref;\n\n              if (isHTMLElement(fieldReference)) {\n                const form = fieldReference.closest('form');\n                if (form) {\n                  form.reset();\n                  break;\n                }\n              }\n            }\n          }\n        }\n\n        for (const fieldName of _names.mount) {\n          setValue(\n            fieldName as FieldPath<TFieldValues>,\n            get(values, fieldName),\n          );\n        }\n      }\n\n      _formValues = cloneObject(values) as TFieldValues;\n\n      _subjects.array.next({\n        values: { ...values },\n      });\n\n      _subjects.state.next({\n        values: { ...values } as TFieldValues,\n      });\n    }\n\n    _names = {\n      mount: keepStateOptions.keepDirtyValues ? _names.mount : new Set(),\n      unMount: new Set(),\n      array: new Set(),\n      disabled: new Set(),\n      watch: new Set(),\n      watchAll: false,\n      focus: '',\n    };\n\n    _state.mount =\n      !_proxyFormState.isValid ||\n      !!keepStateOptions.keepIsValid ||\n      !!keepStateOptions.keepDirtyValues;\n\n    _state.watch = !!_options.shouldUnregister;\n\n    _subjects.state.next({\n      submitCount: keepStateOptions.keepSubmitCount\n        ? _formState.submitCount\n        : 0,\n      isDirty: isEmptyResetValues\n        ? false\n        : keepStateOptions.keepDirty\n          ? _formState.isDirty\n          : !!(\n              keepStateOptions.keepDefaultValues &&\n              !deepEqual(formValues, _defaultValues)\n            ),\n      isSubmitted: keepStateOptions.keepIsSubmitted\n        ? _formState.isSubmitted\n        : false,\n      dirtyFields: isEmptyResetValues\n        ? {}\n        : keepStateOptions.keepDirtyValues\n          ? keepStateOptions.keepDefaultValues && _formValues\n            ? getDirtyFields(_defaultValues, _formValues)\n            : _formState.dirtyFields\n          : keepStateOptions.keepDefaultValues && formValues\n            ? getDirtyFields(_defaultValues, formValues)\n            : keepStateOptions.keepDirty\n              ? _formState.dirtyFields\n              : {},\n      touchedFields: keepStateOptions.keepTouched\n        ? _formState.touchedFields\n        : {},\n      errors: keepStateOptions.keepErrors ? _formState.errors : {},\n      isSubmitSuccessful: keepStateOptions.keepIsSubmitSuccessful\n        ? _formState.isSubmitSuccessful\n        : false,\n      isSubmitting: false,\n    });\n  };\n\n  const reset: UseFormReset<TFieldValues> = (formValues, keepStateOptions) =>\n    _reset(\n      isFunction(formValues)\n        ? (formValues as Function)(_formValues as TFieldValues)\n        : formValues,\n      keepStateOptions,\n    );\n\n  const setFocus: UseFormSetFocus<TFieldValues> = (name, options = {}) => {\n    const field = get(_fields, name);\n    const fieldReference = field && field._f;\n\n    if (fieldReference) {\n      const fieldRef = fieldReference.refs\n        ? fieldReference.refs[0]\n        : fieldReference.ref;\n\n      if (fieldRef.focus) {\n        fieldRef.focus();\n        options.shouldSelect &&\n          isFunction(fieldRef.select) &&\n          fieldRef.select();\n      }\n    }\n  };\n\n  const _setFormState = (\n    updatedFormState: Partial<FormState<TFieldValues>>,\n  ) => {\n    _formState = {\n      ..._formState,\n      ...updatedFormState,\n    };\n  };\n\n  const _resetDefaultValues = () =>\n    isFunction(_options.defaultValues) &&\n    (_options.defaultValues as Function)().then((values: TFieldValues) => {\n      reset(values, _options.resetOptions);\n      _subjects.state.next({\n        isLoading: false,\n      });\n    });\n\n  const methods = {\n    control: {\n      register,\n      unregister,\n      getFieldState,\n      handleSubmit,\n      setError,\n      _subscribe,\n      _runSchema,\n      _getWatch,\n      _getDirty,\n      _setValid,\n      _setFieldArray,\n      _setDisabledField,\n      _setErrors,\n      _getFieldArray,\n      _reset,\n      _resetDefaultValues,\n      _removeUnmounted,\n      _disableForm,\n      _subjects,\n      _proxyFormState,\n      get _fields() {\n        return _fields;\n      },\n      get _formValues() {\n        return _formValues;\n      },\n      get _state() {\n        return _state;\n      },\n      set _state(value) {\n        _state = value;\n      },\n      get _defaultValues() {\n        return _defaultValues;\n      },\n      get _names() {\n        return _names;\n      },\n      set _names(value) {\n        _names = value;\n      },\n      get _formState() {\n        return _formState;\n      },\n      get _options() {\n        return _options;\n      },\n      set _options(value) {\n        _options = {\n          ..._options,\n          ...value,\n        };\n      },\n    },\n    subscribe,\n    trigger,\n    register,\n    handleSubmit,\n    watch,\n    setValue,\n    getValues,\n    reset,\n    resetField,\n    clearErrors,\n    unregister,\n    setError,\n    setFocus,\n    getFieldState,\n  };\n\n  return {\n    ...methods,\n    formControl: methods,\n  };\n}\n","import React from 'react';\n\nimport { createFormControl } from './logic/createFormControl';\nimport getProxyFormState from './logic/getProxyFormState';\nimport deepEqual from './utils/deepEqual';\nimport isEmptyObject from './utils/isEmptyObject';\nimport isFunction from './utils/isFunction';\nimport { FieldValues, FormState, UseFormProps, UseFormReturn } from './types';\n\n/**\n * Custom hook to manage the entire form.\n *\n * @remarks\n * [API](https://react-hook-form.com/docs/useform) • [Demo](https://codesandbox.io/s/react-hook-form-get-started-ts-5ksmm) • [Video](https://www.youtube.com/watch?v=RkXv4AXXC_4)\n *\n * @param props - form configuration and validation parameters.\n *\n * @returns methods - individual functions to manage the form state. {@link UseFormReturn}\n *\n * @example\n * ```tsx\n * function App() {\n *   const { register, handleSubmit, watch, formState: { errors } } = useForm();\n *   const onSubmit = data => console.log(data);\n *\n *   console.log(watch(\"example\"));\n *\n *   return (\n *     <form onSubmit={handleSubmit(onSubmit)}>\n *       <input defaultValue=\"test\" {...register(\"example\")} />\n *       <input {...register(\"exampleRequired\", { required: true })} />\n *       {errors.exampleRequired && <span>This field is required</span>}\n *       <button>Submit</button>\n *     </form>\n *   );\n * }\n * ```\n */\nexport function useForm<\n  TFieldValues extends FieldValues = FieldValues,\n  TContext = any,\n  TTransformedValues = TFieldValues,\n>(\n  props: UseFormProps<TFieldValues, TContext, TTransformedValues> = {},\n): UseFormReturn<TFieldValues, TContext, TTransformedValues> {\n  const _formControl = React.useRef<\n    UseFormReturn<TFieldValues, TContext, TTransformedValues> | undefined\n  >(undefined);\n  const _values = React.useRef<typeof props.values>(undefined);\n  const [formState, updateFormState] = React.useState<FormState<TFieldValues>>({\n    isDirty: false,\n    isValidating: false,\n    isLoading: isFunction(props.defaultValues),\n    isSubmitted: false,\n    isSubmitting: false,\n    isSubmitSuccessful: false,\n    isValid: false,\n    submitCount: 0,\n    dirtyFields: {},\n    touchedFields: {},\n    validatingFields: {},\n    errors: props.errors || {},\n    disabled: props.disabled || false,\n    defaultValues: isFunction(props.defaultValues)\n      ? undefined\n      : props.defaultValues,\n  });\n\n  if (!_formControl.current) {\n    _formControl.current = {\n      ...(props.formControl ? props.formControl : createFormControl(props)),\n      formState,\n    };\n\n    if (\n      props.formControl &&\n      props.defaultValues &&\n      !isFunction(props.defaultValues)\n    ) {\n      props.formControl.reset(props.defaultValues, props.resetOptions);\n    }\n  }\n\n  const control = _formControl.current.control;\n  control._options = props;\n\n  React.useLayoutEffect(\n    () =>\n      control._subscribe({\n        formState: control._proxyFormState,\n        callback: () => updateFormState({ ...control._formState }),\n        reRenderRoot: true,\n      }),\n    [control],\n  );\n\n  React.useEffect(\n    () => control._disableForm(props.disabled),\n    [control, props.disabled],\n  );\n\n  React.useEffect(() => {\n    if (control._proxyFormState.isDirty) {\n      const isDirty = control._getDirty();\n      if (isDirty !== formState.isDirty) {\n        control._subjects.state.next({\n          isDirty,\n        });\n      }\n    }\n  }, [control, formState.isDirty]);\n\n  React.useEffect(() => {\n    if (props.values && !deepEqual(props.values, _values.current)) {\n      control._reset(props.values, control._options.resetOptions);\n      _values.current = props.values;\n      updateFormState((state) => ({ ...state }));\n    } else {\n      control._resetDefaultValues();\n    }\n  }, [props.values, control]);\n\n  React.useEffect(() => {\n    if (props.errors && !isEmptyObject(props.errors)) {\n      control._setErrors(props.errors);\n    }\n  }, [props.errors, control]);\n\n  React.useEffect(() => {\n    if (!control._state.mount) {\n      control._setValid();\n      control._state.mount = true;\n    }\n\n    if (control._state.watch) {\n      control._state.watch = false;\n      control._subjects.state.next({ ...control._formState });\n    }\n\n    control._removeUnmounted();\n  });\n\n  React.useEffect(() => {\n    props.shouldUnregister &&\n      control._subjects.state.next({\n        values: control._getWatch(),\n      });\n  }, [props.shouldUnregister, control]);\n\n  _formControl.current.formState = getProxyFormState(formState, control);\n\n  return _formControl.current;\n}\n","export default {\n  primary: '#0e101c',\n  secondary: '#bf1650',\n  lightBlue: '#516391',\n  blue: '#1e2a4a',\n  lightPink: '#ec5990',\n  errorPink: '#fbecf2',\n  buttonBlue: '#191d3a',\n  link: '#ff7aa8',\n  green: '#1bda2b',\n};\n","import styled from '@emotion/styled';\n\nimport colors from './colors';\n\nexport const paraGraphDefaultStyle = {\n  fontSize: 13,\n  lineHeight: '20px',\n};\n\nconst Button = styled.button<{ hideBackground?: boolean }>`\n  appearance: none;\n  margin: 0;\n  border: 0;\n  color: white;\n  padding: 5px !important;\n  border-radius: 0 !important;\n  background: ${(props: { hideBackground?: boolean }) =>\n    props.hideBackground ? `` : `${colors.blue} !important`};\n  transition: 0.2s all;\n\n  &:hover {\n    background: ${colors.lightBlue};\n  }\n`;\n\nconst CircleButton = styled(Button)`\n  font-size: 14px;\n  font-weight: bold;\n  margin: 0 4px 0 auto;\n  background: none !important;\n  display: flex;\n  width: 25px;\n  height: 25px;\n  justify-content: center;\n  line-height: 14px !important;\n  border-radius: 50% !important;\n  padding: 0 !important;\n  transition: 0.2s all;\n\n  &:hover {\n    background: ${colors.lightBlue};\n  }\n\n  &:active {\n    background: black;\n  }\n`;\n\nconst Input = styled.input`\n  &::placeholder {\n    color: #b3b3b3;\n  }\n\n  &:focus::placeholder {\n    color: white;\n  }\n`;\n\nconst Table = styled.table`\n  transition: 0.3s all;\n\n  &:hover {\n    background: ${colors.primary};\n  }\n`;\n\nexport { Button, CircleButton, Input, Table };\n","import * as React from 'react';\nimport { Control, useFormState } from 'react-hook-form';\n\nimport colors from './colors';\nimport { CircleButton, paraGraphDefaultStyle } from './styled';\n\ntype Props = {\n  setVisible: any;\n  control: Control;\n};\n\nconst Header = ({ setVisible, control }: Props) => {\n  const { isValid } = useFormState({\n    control,\n  });\n\n  return (\n    <header\n      style={{\n        display: 'flex',\n        alignItems: 'center',\n        paddingLeft: 10,\n        backgroundColor: 'transparent',\n      }}\n    >\n      <p\n        style={{\n          ...paraGraphDefaultStyle,\n          margin: 0,\n          padding: 0,\n          fontWeight: 400,\n          fontSize: 12,\n        }}\n      >\n        <span\n          style={{\n            transition: '0.5s all',\n            color: isValid ? colors.green : colors.lightPink,\n          }}\n        >\n          ■\n        </span>{' '}\n        React Hook Form\n      </p>\n      <CircleButton title=\"Close dev panel\" onClick={() => setVisible(false)}>\n        ✕\n      </CircleButton>\n    </header>\n  );\n};\n\nexport default Header;\n","import * as React from 'react';\nimport { get } from 'react-hook-form';\nimport isUndefined from 'lodash/isUndefined';\nimport isObject from 'lodash/isObject';\n\nimport colors from './colors';\nimport { Button, Table, paraGraphDefaultStyle } from './styled';\n\ntype Props = {\n  isNative: boolean;\n  errorMessage: string | undefined;\n  errorType: string | undefined;\n  hasError: boolean;\n  type: string | undefined;\n  isTouched: boolean;\n  isDirty: boolean;\n  index: number;\n  fieldsValues: any;\n  name: string;\n  collapseAll: boolean;\n  refObject: any;\n};\n\nconst PanelTable = ({\n  refObject,\n  hasError,\n  isDirty,\n  fieldsValues,\n  isNative,\n  errorMessage,\n  errorType,\n  type,\n  isTouched,\n  name,\n  collapseAll,\n}: Props) => {\n  const [collapse, setCollapse] = React.useState(false);\n\n  React.useEffect(() => {\n    setCollapse(!collapseAll);\n  }, [collapseAll]);\n\n  let value = fieldsValues ? get(fieldsValues, name) : '';\n  let isValueWrappedInPre = false;\n\n  if (!isUndefined(value)) {\n    if (isObject(value)) {\n      try {\n        value = (\n          <pre style={{ margin: 0 }}>\n            <code style={{ fontSize: 12 }}>\n              {JSON.stringify(value, null, 2)}\n            </code>\n          </pre>\n        );\n        isValueWrappedInPre = true;\n      } catch {\n        value = <span>[Nested Object]</span>;\n      }\n    } else if (typeof value !== 'string') {\n      value = String(value);\n    }\n  }\n\n  return (\n    <Table\n      style={{\n        padding: '5px 8px',\n        width: '100%',\n        transition: '.3s all',\n        borderLeft: `2px solid ${\n          hasError ? colors.secondary : colors.buttonBlue\n        }`,\n        background: 'none',\n      }}\n    >\n      <thead>\n        <tr>\n          <td valign=\"top\" style={{ width: 85, lineHeight: '22px' }}>\n            <Button\n              onClick={() => setCollapse(!collapse)}\n              title=\"Toggle field table\"\n              style={{\n                border: `1px solid ${colors.lightBlue}`,\n                borderRadius: 2,\n                padding: '3px 5px',\n                display: 'inline-block',\n                fontSize: 9,\n                lineHeight: '13px',\n                width: 20,\n                textAlign: 'center',\n                marginRight: 8,\n              }}\n              type=\"button\"\n            >\n              {collapse ? '+' : '-'}\n            </Button>\n            <Button\n              onClick={() => {\n                if (refObject.scrollIntoView) {\n                  refObject.scrollIntoView({ behavior: 'smooth' });\n                }\n              }}\n              title=\"Scroll into view\"\n              style={{\n                border: `1px solid ${colors.lightBlue}`,\n                borderRadius: 2,\n                padding: '3px 5px',\n                display: 'inline-block',\n                fontSize: 9,\n                lineHeight: '13px',\n                textAlign: 'center',\n                width: 'calc(100% - 30px)',\n                ...(isNative\n                  ? {}\n                  : { cursor: 'not-allowed', background: colors.lightBlue }),\n              }}\n              type=\"button\"\n            >\n              {isNative ? 'Native' : 'Custom'}\n            </Button>\n          </td>\n          <td\n            style={{\n              display: 'block',\n              maxWidth: 140,\n            }}\n          >\n            <p\n              style={{\n                margin: 0,\n                padding: 0,\n                top: 0,\n                position: 'relative',\n                whiteSpace: 'nowrap',\n                overflow: 'hidden',\n                textOverflow: 'ellipsis',\n                ...paraGraphDefaultStyle,\n                lineHeight: '24px',\n              }}\n              title={name}\n            >\n              {name}\n            </p>\n          </td>\n        </tr>\n      </thead>\n      {!collapse && (\n        <tbody>\n          {type && (\n            <tr>\n              <td\n                align=\"right\"\n                style={{\n                  paddingRight: 5,\n                  fontWeight: 500,\n                  verticalAlign: 'top',\n                  ...paraGraphDefaultStyle,\n                }}\n              >\n                Type:\n              </td>\n              <td\n                style={{\n                  display: 'block',\n                  maxWidth: 100,\n                  ...paraGraphDefaultStyle,\n                }}\n              >\n                {type}\n              </td>\n            </tr>\n          )}\n          {errorType && (\n            <tr>\n              <td\n                align=\"right\"\n                style={{\n                  paddingRight: 5,\n                  fontWeight: 500,\n                  verticalAlign: 'top',\n                  ...paraGraphDefaultStyle,\n                }}\n              >\n                ERROR Type:\n              </td>\n              <td\n                style={{\n                  display: 'block',\n                  maxWidth: 100,\n                  ...paraGraphDefaultStyle,\n                }}\n              >\n                {errorType}\n              </td>\n            </tr>\n          )}\n          {errorMessage && (\n            <tr>\n              <td\n                align=\"right\"\n                style={{\n                  paddingRight: 5,\n                  fontWeight: 500,\n                  verticalAlign: 'top',\n                  ...paraGraphDefaultStyle,\n                }}\n              >\n                MESSAGE:\n              </td>\n              <td\n                style={{\n                  display: 'block',\n                  maxWidth: 100,\n                  ...paraGraphDefaultStyle,\n                }}\n              >\n                {typeof errorMessage === 'string'\n                  ? errorMessage.trim()\n                  : JSON.stringify(errorMessage)}\n              </td>\n            </tr>\n          )}\n          {!isUndefined(value) && (\n            <tr>\n              <td\n                align=\"right\"\n                style={{\n                  paddingRight: 5,\n                  fontWeight: 500,\n                  verticalAlign: 'top',\n                  ...paraGraphDefaultStyle,\n                }}\n              >\n                Value:\n              </td>\n              <td\n                data-testid={`${name}-field-value`}\n                style={{\n                  display: 'block',\n                  maxWidth: 100,\n                  ...paraGraphDefaultStyle,\n                }}\n              >\n                {!isValueWrappedInPre && (\n                  <p\n                    title={value}\n                    style={{\n                      ...paraGraphDefaultStyle,\n                      margin: 0,\n                      padding: 0,\n                    }}\n                  >\n                    {value}\n                  </p>\n                )}\n                {isValueWrappedInPre && (\n                  <div\n                    style={{\n                      ...paraGraphDefaultStyle,\n                      margin: 0,\n                      padding: 0,\n                    }}\n                  >\n                    {value}\n                  </div>\n                )}\n              </td>\n            </tr>\n          )}\n          {\n            <tr>\n              <td\n                align=\"right\"\n                style={{\n                  paddingRight: 5,\n                  fontWeight: 500,\n                  verticalAlign: 'top',\n                  ...paraGraphDefaultStyle,\n                }}\n              >\n                Touched:\n              </td>\n              <td>\n                <code\n                  style={{\n                    color: isTouched ? colors.green : colors.lightPink,\n                    ...paraGraphDefaultStyle,\n                    fontSize: 12,\n                  }}\n                >\n                  {isTouched ? 'true' : 'false'}\n                </code>\n              </td>\n            </tr>\n          }\n          {\n            <tr>\n              <td\n                align=\"right\"\n                style={{\n                  paddingRight: 5,\n                  fontWeight: 500,\n                  verticalAlign: 'top',\n                  ...paraGraphDefaultStyle,\n                }}\n              >\n                Dirty:\n              </td>\n              <td>\n                <code\n                  style={{\n                    color: isDirty ? colors.green : colors.lightPink,\n                    ...paraGraphDefaultStyle,\n                    fontSize: 12,\n                  }}\n                >\n                  {isDirty ? 'true' : 'false'}\n                </code>\n              </td>\n            </tr>\n          }\n        </tbody>\n      )}\n    </Table>\n  );\n};\n\nexport default PanelTable;\n","import * as React from 'react';\nimport { Animate } from 'react-simple-animate';\n\nimport colors from './colors';\nimport { Button, paraGraphDefaultStyle } from './styled';\n\ntype Props = {\n  formState: any;\n  showFormState: boolean;\n  setShowFormState: (payload: boolean) => void;\n};\n\nconst FormStateTable = ({\n  formState,\n  showFormState,\n  setShowFormState,\n}: Props) => (\n  <div\n    style={{\n      alignSelf: 'end',\n    }}\n  >\n    <Animate\n      play={showFormState}\n      start={{ opacity: 0 }}\n      end={{ opacity: 1 }}\n      render={({ style }) => (\n        <table\n          style={{\n            padding: '5px 10px',\n            display: 'block',\n            background: 'black',\n            borderTop: `1px solid ${colors.lightPink}`,\n            pointerEvents: 'none',\n            ...style,\n          }}\n        >\n          <tbody>\n            <tr>\n              <td align=\"right\" style={{ width: 90, ...paraGraphDefaultStyle }}>\n                Valid:\n              </td>\n              <td\n                style={{\n                  color: formState.isValid ? colors.green : colors.lightPink,\n                  ...paraGraphDefaultStyle,\n                }}\n              >\n                {formState.isValid ? 'true' : 'false'}\n              </td>\n            </tr>\n            <tr>\n              <td align=\"right\" style={{ ...paraGraphDefaultStyle }}>\n                Dirty:\n              </td>\n              <td\n                style={{\n                  color: formState.isDirty ? colors.green : colors.lightPink,\n                  ...paraGraphDefaultStyle,\n                }}\n              >\n                {formState.isDirty ? 'true' : 'false'}\n              </td>\n            </tr>\n            <tr>\n              <td align=\"right\" style={{ ...paraGraphDefaultStyle }}>\n                Submitted:\n              </td>\n              <td\n                style={{\n                  color: formState.isSubmitted\n                    ? colors.green\n                    : colors.lightPink,\n                  ...paraGraphDefaultStyle,\n                }}\n              >\n                {formState.isSubmitted ? 'true' : 'false'}\n              </td>\n            </tr>\n            <tr>\n              <td align=\"right\" style={{ ...paraGraphDefaultStyle }}>\n                Count:\n              </td>\n              <td\n                style={{\n                  color: formState.submitCount\n                    ? colors.green\n                    : colors.lightPink,\n                  ...paraGraphDefaultStyle,\n                }}\n              >\n                {formState.submitCount}\n              </td>\n            </tr>\n            <tr>\n              <td\n                align=\"right\"\n                style={{\n                  ...paraGraphDefaultStyle,\n                }}\n              >\n                Submitting:\n              </td>\n              <td\n                style={{\n                  color: formState.isSubmitting\n                    ? colors.green\n                    : colors.lightPink,\n                  ...paraGraphDefaultStyle,\n                }}\n              >\n                {formState.isSubmitting ? 'true' : 'false'}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      )}\n    />\n    <Button\n      style={{\n        margin: 0,\n        width: '100%',\n        padding: '8px 10px',\n        textTransform: 'none',\n        fontSize: 12,\n        lineHeight: '14px',\n        cursor: 'pointer',\n      }}\n      title=\"Toggle form state panel\"\n      onClick={() => {\n        setShowFormState(!showFormState);\n      }}\n      type=\"button\"\n    >\n      <span\n        style={{\n          transition: '0.5s all',\n          color: formState.isValid ? colors.green : colors.lightPink,\n        }}\n      >\n        ■\n      </span>{' '}\n      Form State: {showFormState ? 'OFF' : 'ON'}\n    </Button>\n  </div>\n);\n\nexport default FormStateTable;\n","export function setVisible(state: any, payload: any) {\n  return {\n    ...state,\n    visible: payload,\n  };\n}\n\nexport function setCollapse(state: any, payload: any) {\n  return {\n    ...state,\n    isCollapse: payload,\n  };\n}\n","import * as React from 'react';\nimport { useEffect } from 'react';\nimport { Control, useForm, useWatch, useFormState, get } from 'react-hook-form';\nimport { useStateMachine } from 'little-state-machine';\n\nimport colors from './colors';\nimport PanelTable from './panelTable';\nimport FormStateTable from './formStateTable';\nimport { Button, Input } from './styled';\nimport { setCollapse } from './settingAction';\n\nlet childIndex = 0;\n\nfunction PanelChildren<T, K, L, M, G>({\n  fields,\n  searchTerm,\n  touchedFields,\n  errors,\n  dirtyFields,\n  state,\n  fieldsValues,\n}: {\n  fields: T;\n  fieldsValues: K;\n  state: {\n    isCollapse: boolean;\n  };\n  searchTerm: string;\n  touchedFields: M;\n  errors: L;\n  dirtyFields: G;\n}) {\n  return (\n    <>\n      {fields &&\n        Object.entries(fields)\n          .filter(\n            ([name]) =>\n              ((name &&\n                name.toLowerCase &&\n                name.toLowerCase().includes(searchTerm)) ||\n                (!name && !searchTerm) ||\n                searchTerm === '') &&\n              name,\n          )\n          .map(([name, value], index) => {\n            childIndex++;\n\n            if (!value?._f) {\n              return (\n                <PanelChildren\n                  key={name + childIndex}\n                  {...{\n                    fields: value,\n                    searchTerm,\n                    touchedFields,\n                    errors,\n                    dirtyFields,\n                    state,\n                    fieldsValues,\n                  }}\n                />\n              );\n            } else {\n              const error = get(errors, value._f.name);\n              const errorMessage = get(error, 'message', undefined);\n              const errorType = get(error, 'type', undefined);\n              const type = get(value, 'ref.type', undefined);\n              const isTouched = !!get(touchedFields, value._f.name);\n              const isNative = !!(value && value._f.ref.type);\n              const isDirty = !!get(dirtyFields, value._f.name);\n              const hasError = !!error;\n              const ref = get(value, '_f.ref');\n\n              return (\n                <section\n                  key={value?._f.name + childIndex}\n                  style={{\n                    borderBottom: `1px dashed ${colors.secondary}`,\n                    margin: 0,\n                  }}\n                >\n                  <PanelTable\n                    refObject={ref}\n                    index={index}\n                    collapseAll={state.isCollapse}\n                    name={value?._f.name}\n                    isTouched={isTouched}\n                    type={type}\n                    hasError={hasError}\n                    isNative={isNative}\n                    errorMessage={errorMessage}\n                    errorType={errorType}\n                    isDirty={isDirty}\n                    fieldsValues={fieldsValues}\n                  />\n                </section>\n              );\n            }\n          })}\n    </>\n  );\n}\n\nconst Panel = ({ control, control: { _fields } }: { control: Control }) => {\n  const formState = useFormState({\n    control,\n  });\n  const { dirtyFields, touchedFields, errors } = formState;\n  formState.isDirty;\n  const { state, actions } = useStateMachine({\n    setCollapse,\n  });\n  const [, setData] = React.useState({});\n  const [showFormState, setShowFormState] = React.useState(false);\n  const fieldsValues = useWatch({\n    control,\n  });\n  const { register, watch } = useForm();\n  const searchTerm = watch('search', '');\n\n  useEffect(() => {\n    setData({});\n  }, []);\n\n  return (\n    <div\n      style={{\n        display: 'grid',\n        gridTemplateRows: '56px auto',\n        height:\n          process.env.NODE_ENV === 'test' ? '100vh' : 'calc(100vh - 40px)',\n      }}\n    >\n      <div\n        style={{\n          display: 'grid',\n          gridTemplateColumns: `1fr 1fr`,\n          gridTemplateRows: '28px 28px',\n        }}\n      >\n        <Button\n          style={{\n            borderRight: `1px solid ${colors.primary}`,\n            textTransform: 'none',\n            fontSize: 11,\n            lineHeight: 1,\n          }}\n          title=\"Update values and state the form\"\n          onClick={() => setData({})}\n          type=\"button\"\n        >\n          ♺ REFRESH\n        </Button>\n        <Button\n          style={{\n            borderRight: `1px solid ${colors.primary}`,\n            textTransform: 'none',\n            fontSize: 11,\n            lineHeight: 1,\n          }}\n          title=\"Toggle entire fields\"\n          onClick={() => {\n            actions.setCollapse(!state.isCollapse);\n          }}\n          type=\"button\"\n        >\n          {state.isCollapse ? '[-] COLLAPSE' : '[+] EXPAND'}\n        </Button>\n\n        <Input\n          style={{\n            display: 'inline-block',\n            borderRadius: 0,\n            width: '100%',\n            margin: 0,\n            padding: '5px 10px',\n            WebkitAppearance: 'none',\n            appearance: 'none',\n            fontSize: 14,\n            border: 0,\n            color: 'white',\n            gridColumnStart: 1,\n            gridColumnEnd: 4,\n            background: 'black',\n          }}\n          {...register('search')}\n          placeholder=\"Filter name...\"\n          type=\"search\"\n        />\n      </div>\n\n      <div\n        style={{\n          overflow: 'auto',\n        }}\n      >\n        <PanelChildren\n          fields={_fields}\n          searchTerm={searchTerm}\n          errors={errors}\n          touchedFields={touchedFields}\n          dirtyFields={dirtyFields}\n          fieldsValues={fieldsValues}\n          state={state}\n        />\n      </div>\n\n      <FormStateTable\n        formState={formState}\n        showFormState={showFormState}\n        setShowFormState={setShowFormState}\n      />\n    </div>\n  );\n};\n\nexport default Panel;\n","import * as React from 'react';\n\nimport colors from './colors';\n\nconst Logo = ({\n  style,\n  actions,\n}: {\n  style?: Record<string, any>;\n  actions: {\n    setVisible: (arg: boolean) => void;\n  };\n}) => {\n  return (\n    <svg\n      fill=\"white\"\n      viewBox=\"0 0 100 100\"\n      style={{\n        height: 14,\n        padding: 3,\n        borderRadius: 2,\n        background: colors.lightPink,\n        ...style,\n      }}\n      onClick={() => {\n        actions.setVisible(true);\n      }}\n      aria-label=\"React Hook Form Logo\"\n    >\n      <path d=\"M73.56,13.32H58.14a8.54,8.54,0,0,0-16.27,0H26.44a11,11,0,0,0-11,11V81.63a11,11,0,0,0,11,11H73.56a11,11,0,0,0,11-11V24.32A11,11,0,0,0,73.56,13.32Zm-30.92,2a1,1,0,0,0,1-.79,6.54,6.54,0,0,1,12.78,0,1,1,0,0,0,1,.79h5.38v6.55a3,3,0,0,1-3,3H40.25a3,3,0,0,1-3-3V15.32ZM82.56,81.63a9,9,0,0,1-9,9H26.44a9,9,0,0,1-9-9V24.32a9,9,0,0,1,9-9h8.81v6.55a5,5,0,0,0,5,5h19.5a5,5,0,0,0,5-5V15.32h8.81a9,9,0,0,1,9,9Z\" />\n      <path\n        style={{ transform: 'translateX(-25px)' }}\n        d=\"M71.6,45.92H54a1,1,0,0,0,0,2H71.6a1,1,0,0,0,0-2Z\"\n      />\n      <path d=\"M71.6,45.92H54a1,1,0,0,0,0,2H71.6a1,1,0,0,0,0-2Z\" />\n      <path\n        style={{ transform: 'translateX(-25px)' }}\n        d=\"M71.1,69.49H53.45a1,1,0,1,0,0,2H71.1a1,1,0,0,0,0-2Z\"\n      />\n      <path d=\"M71.1,69.49H53.45a1,1,0,1,0,0,2H71.1a1,1,0,0,0,0-2Z\" />\n    </svg>\n  );\n};\n\nexport default Logo;\n","export type PLACEMENT =\n  | 'top-left'\n  | 'top-right'\n  | 'bottom-left'\n  | 'bottom-right';\n\nexport function getPositionByPlacement(\n  placement: PLACEMENT,\n  defaultX = 0,\n  defaultY = 0,\n) {\n  const [x, y] = placement.split('-');\n  return {\n    [x]: defaultX,\n    [y]: defaultY,\n  };\n}\n","import * as React from 'react';\nimport { Control } from 'react-hook-form';\nimport { Animate } from 'react-simple-animate';\n\nimport Header from './header';\nimport Panel from './panel';\nimport colors from './colors';\nimport Logo from './logo';\nimport { Button } from './styled';\nimport { useStateMachine } from 'little-state-machine';\nimport { setVisible } from './settingAction';\nimport { PLACEMENT, getPositionByPlacement } from './position';\n\nexport interface DevtoolUIProps {\n  control: Control<any>;\n  placement?: PLACEMENT;\n  /** Custom styles for the \"show/hide panel\" button and for the panel div */\n  styles?: {\n    /** Custom styles for the \"show/hide panel\" button */\n    button?: React.HTMLAttributes<HTMLButtonElement>['style'];\n    /** Custom styles for the panel div */\n    panel?: React.HTMLAttributes<HTMLDivElement>['style'];\n  };\n}\n\nexport const DevToolUI: React.FC<DevtoolUIProps> = ({\n  control,\n  placement = 'top-right',\n  styles,\n}) => {\n  const { state, actions } = useStateMachine({\n    setVisible,\n  });\n\n  const position = getPositionByPlacement(placement, 0, 0);\n\n  return (\n    <>\n      <Animate\n        play={state.visible}\n        duration={0.2}\n        start={{\n          ...position,\n          position: 'fixed',\n          transform: placement.includes('right')\n            ? 'translateX(280px)'\n            : 'translateX(-280px)',\n          zIndex: 99999,\n        }}\n        end={{\n          ...position,\n          position: 'fixed',\n          transform: 'translateX(0)',\n          zIndex: 99999,\n        }}\n      >\n        <div\n          style={{\n            ...position,\n            position: 'fixed',\n            height: '100vh',\n            width: 250,\n            zIndex: 99999,\n            background: colors.buttonBlue,\n            display: 'grid',\n            textAlign: 'left',\n            color: 'white',\n            fontSize: 14,\n            gridTemplateRows: '40px auto',\n            fontFamily:\n              \"-apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif\",\n            ...styles?.panel,\n          }}\n        >\n          <Header setVisible={actions.setVisible} control={control} />\n          <Panel control={control} />\n        </div>\n      </Animate>\n\n      {!state.visible && (\n        <Button\n          title=\"Show dev panel\"\n          hideBackground\n          style={{\n            position: 'fixed',\n            zIndex: 99999,\n            ...getPositionByPlacement(placement, 3, 3),\n            padding: 3,\n            margin: 0,\n            background: 'none',\n            ...styles?.button,\n          }}\n          type=\"button\"\n        >\n          <Logo actions={actions} />\n        </Button>\n      )}\n    </>\n  );\n};\n","import get from 'lodash/get';\n\nexport function proxyToObject<T extends Record<string, any>>(proxy: T) {\n  return Reflect.ownKeys(proxy).reduce((prev, key) => {\n    prev[key as keyof T] = proxy[key as keyof T];\n    return prev;\n  }, {} as T);\n}\n\nexport function nestToFlat<V>(\n  flatKeys: string[],\n  obj: object,\n  defaultValue?: V,\n) {\n  return flatKeys.reduce((prev, name) => {\n    // nested field may be `undefined`\n    prev[name] = get(obj, name) || defaultValue;\n    return prev;\n  }, {} as Record<string, V>);\n}\n","import get from 'lodash/get';\nimport { useEffect, useState } from 'react';\nimport { Control, useFormState, useWatch } from 'react-hook-form';\nimport useDeepCompareEffect from 'use-deep-compare-effect';\nimport { MessageData, UpdatePayload } from './types';\nimport { nestToFlat, proxyToObject } from './utils';\n\nexport function useExportControlToExtension({\n  id,\n  control,\n}: {\n  id: string;\n  control: Control<any>;\n}) {\n  const nestedFormValues = useWatch({ control });\n  const formState = useFormState({ control });\n\n  const [isExtensionEnabled, setIsExtensionEnabled] = useState(false);\n\n  const handleInitMessage = (message: MessageEvent<MessageData>) => {\n    if (\n      message.data.source !== 'react-hook-form-bridge' ||\n      message.data.type !== 'INIT'\n    ) {\n      return;\n    }\n    window.postMessage({\n      source: 'react-hook-form-bridge',\n      type: 'WELCOME',\n    } as MessageData);\n    setIsExtensionEnabled(true);\n  };\n\n  useEffect(() => {\n    window.addEventListener('message', handleInitMessage);\n    return () => window.removeEventListener('message', handleInitMessage);\n  }, []);\n\n  useDeepCompareEffect(() => {\n    if (!isExtensionEnabled) {\n      return;\n    }\n\n    const {\n      errors: nestedErrors,\n      dirtyFields: nestedDirtyFields,\n      touchedFields: nestedTouchedFields,\n      ...formStatus\n    } = proxyToObject(formState);\n\n    const flatFieldNames = [...control._names.mount];\n\n    const formValues = nestToFlat(flatFieldNames, nestedFormValues, '');\n    const dirtyFields = nestToFlat(flatFieldNames, nestedDirtyFields, false);\n    const touchedFields = nestToFlat(\n      flatFieldNames,\n      nestedTouchedFields,\n      false,\n    );\n    const flatErrors = nestToFlat<{ type?: string; message?: string }>(\n      flatFieldNames,\n      nestedErrors,\n    );\n\n    const errors = Object.entries(flatErrors).reduce((prev, [key, value]) => {\n      prev[key] = {\n        type: value?.type as string,\n        message: value?.message as string,\n      };\n      return prev;\n    }, {} as Record<string, { type?: string; message?: string }>);\n\n    const nativeFields = flatFieldNames.reduce((prev, name) => {\n      const field = get(control._fields, name)?._f;\n      prev[name] = get(field, 'ref')?.type;\n      return prev;\n    }, {} as Record<string, boolean>);\n\n    const updateMessagePayload: UpdatePayload = {\n      id,\n      data: {\n        formValues,\n        formState: {\n          errors,\n          dirtyFields,\n          touchedFields,\n          nativeFields,\n          ...formStatus,\n        },\n      },\n    };\n    window.postMessage({\n      source: 'react-hook-form-bridge',\n      type: 'UPDATE',\n      payload: updateMessagePayload,\n    } as MessageData);\n  }, [isExtensionEnabled, nestedFormValues, proxyToObject(formState)]);\n\n  return { isExtensionEnabled };\n}\n","import { createStore, StateMachineProvider } from 'little-state-machine';\nimport * as React from 'react';\nimport { Control, FieldValues, useFormContext } from 'react-hook-form';\nimport { v4 as generateUUID } from 'uuid';\nimport { DevToolUI, DevtoolUIProps } from './devToolUI';\nimport { useExportControlToExtension } from './extension/useExportControlToExtension';\nimport type { PLACEMENT } from './position';\n\nif (typeof window !== 'undefined') {\n  createStore(\n    {\n      visible: false,\n      isCollapse: false,\n      filterName: '',\n    },\n    {\n      name: '__REACT_HOOK_FORM_DEVTOOLS__',\n      middleWares: [],\n      storageType: window.localStorage,\n    },\n  );\n}\n\nexport const DevTool = <T extends FieldValues>(\n  props?: {\n    id?: string;\n    control?: Control<T>;\n  } & Pick<DevtoolUIProps, 'placement' | 'styles'>,\n) => {\n  const methods = useFormContext();\n\n  const uuid = React.useRef('');\n\n  React.useEffect(() => {\n    uuid.current = generateUUID();\n  }, []);\n\n  const { isExtensionEnabled } = useExportControlToExtension({\n    id: props?.id ?? uuid.current,\n    control: props?.control ?? methods.control,\n  });\n  if (isExtensionEnabled) {\n    return null;\n  }\n\n  return (\n    <StateMachineProvider>\n      <DevToolUI\n        control={props?.control ?? methods.control}\n        placement={props?.placement}\n        styles={props?.styles}\n      />\n    </StateMachineProvider>\n  );\n};\n\nexport type { PLACEMENT };\n"],"names":["React","isCheckBox","styled","isUndefined","isObject","Animate","useStateMachine","useEffect","get","useState","useDeepCompareEffect","createStore","uuid","generateUUID","StateMachineProvider"],"mappings":"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"}